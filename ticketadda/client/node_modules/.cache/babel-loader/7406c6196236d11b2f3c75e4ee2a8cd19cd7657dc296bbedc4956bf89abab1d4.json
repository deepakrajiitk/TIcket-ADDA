{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newFullBlockEvent = void 0;\nconst gatewayutils_1 = require(\"../gatewayutils\");\nconst fulltransactioneventfactory_1 = require(\"./fulltransactioneventfactory\");\nconst util = __importStar(require(\"util\"));\nfunction newFullBlockEvent(eventInfo) {\n  if (!eventInfo.block) {\n    throw new Error('No block data found: ' + util.inspect(eventInfo));\n  }\n  const blockEvent = {\n    blockNumber: eventInfo.blockNumber,\n    blockData: eventInfo.block,\n    getTransactionEvents: (0, gatewayutils_1.cachedResult)(() => newFullTransactionEvents(blockEvent))\n  };\n  return Object.freeze(blockEvent);\n}\nexports.newFullBlockEvent = newFullBlockEvent;\nfunction newFullTransactionEvents(blockEvent) {\n  return (0, fulltransactioneventfactory_1.getTransactionEnvelopeIndexes)(blockEvent.blockData).map(index => (0, fulltransactioneventfactory_1.newFullTransactionEvent)(blockEvent, index));\n}","map":{"version":3,"names":["gatewayutils_1","require","fulltransactioneventfactory_1","util","__importStar","newFullBlockEvent","eventInfo","block","Error","inspect","blockEvent","blockNumber","blockData","getTransactionEvents","cachedResult","newFullTransactionEvents","Object","freeze","exports","getTransactionEnvelopeIndexes","map","index","newFullTransactionEvent"],"sources":["../../../src/impl/event/fullblockeventfactory.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,MAAAA,cAAA,GAAAC,OAAA;AACA,MAAAC,6BAAA,GAAAD,OAAA;AACA,MAAAE,IAAA,GAAAC,YAAA,CAAAH,OAAA;AAEA,SAAgBI,iBAAiBA,CAACC,SAAoB;EACrD,IAAI,CAACA,SAAS,CAACC,KAAK,EAAE;IACrB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,GAAGL,IAAI,CAACM,OAAO,CAACH,SAAS,CAAC,CAAC;;EAGnE,MAAMI,UAAU,GAAe;IAC9BC,WAAW,EAAEL,SAAS,CAACK,WAAW;IAClCC,SAAS,EAAEN,SAAS,CAACC,KAAK;IAC1BM,oBAAoB,EAAE,IAAAb,cAAA,CAAAc,YAAY,EAAC,MAAMC,wBAAwB,CAACL,UAAU,CAAC;GAC7E;EAED,OAAOM,MAAM,CAACC,MAAM,CAACP,UAAU,CAAC;AACjC;AAZAQ,OAAA,CAAAb,iBAAA,GAAAA,iBAAA;AAcA,SAASU,wBAAwBA,CAACL,UAAsB;EACvD,OAAO,IAAAR,6BAAA,CAAAiB,6BAA6B,EAACT,UAAU,CAACE,SAAmC,CAAC,CAClFQ,GAAG,CAAEC,KAAK,IAAK,IAAAnB,6BAAA,CAAAoB,uBAAuB,EAACZ,UAAU,EAAEW,KAAK,CAAC,CAAC;AAC7D"},"metadata":{},"sourceType":"script","externalDependencies":[]}