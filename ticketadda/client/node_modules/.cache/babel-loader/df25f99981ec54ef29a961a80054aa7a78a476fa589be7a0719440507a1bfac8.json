{"ast":null,"code":"/*\n * Copyright 2019 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst TYPE = 'ServiceHandler';\nconst {\n  getLogger\n} = require('./Utils.js');\nconst logger = getLogger(TYPE);\n\n/**\n * @classdesc\n * This is an base class that represents an action on a fabric service.\n *\n * @class\n */\nconst ServiceHandler = class {\n  /**\n   * Construct a ServiceHandler base object.\n   *\n   * @returns {ServiceHandler} The ServiceHandler instance.\n   */\n  constructor() {\n    logger.debug(`${TYPE}.constructor - start `);\n  }\n\n  /**\n   * implementing class must implement\n   */\n  commit() {\n    throw Error('\"commit\" method must be implemented');\n  }\n\n  /**\n   * implementing class must implement\n   */\n  endorse() {\n    throw Error('\"endorse\" method must be implemented');\n  }\n\n  /**\n   * implementing class must implement\n   */\n  query() {\n    throw Error('\"query\" method must be implemented');\n  }\n\n  /**\n   * implementing class must implement\n   */\n  toString() {\n    throw Error('\"toString\" method must be implemented');\n  }\n};\nmodule.exports = ServiceHandler;","map":{"version":3,"names":["TYPE","getLogger","require","logger","ServiceHandler","constructor","debug","commit","Error","endorse","query","toString","module","exports"],"sources":["/home/deepakraj/Desktop/Ticket-ADDA/ticketadda/client/node_modules/fabric-common/lib/ServiceHandler.js"],"sourcesContent":["/*\n * Copyright 2019 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst TYPE = 'ServiceHandler';\n\nconst {getLogger} = require('./Utils.js');\nconst logger = getLogger(TYPE);\n\n/**\n * @classdesc\n * This is an base class that represents an action on a fabric service.\n *\n * @class\n */\nconst ServiceHandler = class {\n\n\t/**\n\t * Construct a ServiceHandler base object.\n\t *\n\t * @returns {ServiceHandler} The ServiceHandler instance.\n\t */\n\tconstructor() {\n\t\tlogger.debug(`${TYPE}.constructor - start `);\n\t}\n\n\t/**\n\t * implementing class must implement\n\t */\n\tcommit() {\n\t\tthrow Error('\"commit\" method must be implemented');\n\t}\n\n\t/**\n\t * implementing class must implement\n\t */\n\tendorse() {\n\t\tthrow Error('\"endorse\" method must be implemented');\n\t}\n\n\t/**\n\t * implementing class must implement\n\t */\n\tquery() {\n\t\tthrow Error('\"query\" method must be implemented');\n\t}\n\n\t/**\n\t * implementing class must implement\n\t */\n\ttoString() {\n\t\tthrow Error('\"toString\" method must be implemented');\n\t}\n};\n\nmodule.exports = ServiceHandler;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAG,gBAAgB;AAE7B,MAAM;EAACC;AAAS,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AACzC,MAAMC,MAAM,GAAGF,SAAS,CAACD,IAAI,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,cAAc,GAAG,MAAM;EAE5B;AACD;AACA;AACA;AACA;EACCC,WAAWA,CAAA,EAAG;IACbF,MAAM,CAACG,KAAK,CAAE,GAAEN,IAAK,uBAAsB,CAAC;EAC7C;;EAEA;AACD;AACA;EACCO,MAAMA,CAAA,EAAG;IACR,MAAMC,KAAK,CAAC,qCAAqC,CAAC;EACnD;;EAEA;AACD;AACA;EACCC,OAAOA,CAAA,EAAG;IACT,MAAMD,KAAK,CAAC,sCAAsC,CAAC;EACpD;;EAEA;AACD;AACA;EACCE,KAAKA,CAAA,EAAG;IACP,MAAMF,KAAK,CAAC,oCAAoC,CAAC;EAClD;;EAEA;AACD;AACA;EACCG,QAAQA,CAAA,EAAG;IACV,MAAMH,KAAK,CAAC,uCAAuC,CAAC;EACrD;AACD,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGT,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}