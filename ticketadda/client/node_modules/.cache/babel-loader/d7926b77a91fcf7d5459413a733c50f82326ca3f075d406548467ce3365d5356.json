{"ast":null,"code":"/*\n * Copyright IBM Corp. All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n'use strict';\n\n/**\n * Abstract class for a Key-Value store.\n *\n * @class\n */\nclass KeyValueStore {\n  /**\n   * Initialize the store\n   * @abstract\n   * @async\n   */\n  initialize() {}\n\n  /**\n   * Get the value associated with <code>name</code>.\n   * @abstract\n   * @param {string} name Name of the key\n   * @returns {Promise} Promise for the value corresponding to the key. If the value does not exist in the\n   * store, returns null without rejecting the promise\n   */\n  getValue(name) {}\n\n  /**\n   * Set the value associated with <code>name</code>.\n   * @abstract\n   * @param {string} name Name of the key to save\n   * @param {string} value The Value to save\n   * @returns {Promise} Promise for the 'value' object upon successful write operation\n   */\n  setValue(name, value) {}\n}\nmodule.exports = KeyValueStore;","map":{"version":3,"names":["KeyValueStore","initialize","getValue","name","setValue","value","module","exports"],"sources":["/home/deepakraj/Desktop/Ticket-ADDA/ticketadda/client/node_modules/fabric-common/lib/KeyValueStore.js"],"sourcesContent":["/*\n * Copyright IBM Corp. All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n'use strict';\n\n/**\n * Abstract class for a Key-Value store.\n *\n * @class\n */\nclass KeyValueStore {\n\n\t/**\n\t * Initialize the store\n\t * @abstract\n\t * @async\n\t */\n\tinitialize() {\n\t}\n\n\t/**\n\t * Get the value associated with <code>name</code>.\n\t * @abstract\n\t * @param {string} name Name of the key\n\t * @returns {Promise} Promise for the value corresponding to the key. If the value does not exist in the\n\t * store, returns null without rejecting the promise\n\t */\n\tgetValue(name) {\n\t}\n\n\t/**\n\t * Set the value associated with <code>name</code>.\n\t * @abstract\n\t * @param {string} name Name of the key to save\n\t * @param {string} value The Value to save\n\t * @returns {Promise} Promise for the 'value' object upon successful write operation\n\t */\n\tsetValue(name, value) {\n\t}\n\n}\n\nmodule.exports = KeyValueStore;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA,MAAMA,aAAa,CAAC;EAEnB;AACD;AACA;AACA;AACA;EACCC,UAAUA,CAAA,EAAG,CACb;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCC,QAAQA,CAACC,IAAI,EAAE,CACf;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCC,QAAQA,CAACD,IAAI,EAAEE,KAAK,EAAE,CACtB;AAED;AAEAC,MAAM,CAACC,OAAO,GAAGP,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}