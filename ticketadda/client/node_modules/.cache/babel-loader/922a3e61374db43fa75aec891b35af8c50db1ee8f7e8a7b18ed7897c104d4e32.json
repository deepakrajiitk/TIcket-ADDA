{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newPrivateBlockEvent = void 0;\nconst gatewayutils_1 = require(\"../gatewayutils\");\nconst fullblockeventfactory_1 = require(\"./fullblockeventfactory\");\nconst fullcontracteventfactory_1 = require(\"./fullcontracteventfactory\");\nconst fulltransactioneventfactory_1 = require(\"./fulltransactioneventfactory\");\nconst util = __importStar(require(\"util\"));\nfunction newPrivateBlockEvent(eventInfo) {\n  const privateData = eventInfo.privateData;\n  if (!privateData) {\n    throw new Error('No private data found: ' + util.inspect(eventInfo));\n  }\n  const fullBlockEvent = (0, fullblockeventfactory_1.newFullBlockEvent)(eventInfo);\n  const privateBlockEvent = {\n    blockNumber: fullBlockEvent.blockNumber,\n    blockData: fullBlockEvent.blockData,\n    getTransactionEvents: (0, gatewayutils_1.cachedResult)(() => newPrivateTransactionEvents(privateBlockEvent, privateData))\n  };\n  return Object.freeze(privateBlockEvent);\n}\nexports.newPrivateBlockEvent = newPrivateBlockEvent;\nfunction newPrivateTransactionEvents(blockEvent, privateData) {\n  return (0, fulltransactioneventfactory_1.getTransactionEnvelopeIndexes)(blockEvent.blockData).map(index => newPrivateTransactionEvent(blockEvent, index, privateData[index]));\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction newPrivateTransactionEvent(blockEvent, index, privateData) {\n  const fullTransactionEvent = (0, fulltransactioneventfactory_1.newFullTransactionEvent)(blockEvent, index);\n  const privateTransactionEvent = {\n    transactionId: fullTransactionEvent.transactionId,\n    status: fullTransactionEvent.status,\n    transactionData: fullTransactionEvent.transactionData,\n    isValid: fullTransactionEvent.isValid,\n    timestamp: fullTransactionEvent.timestamp,\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    privateData,\n    getBlockEvent: () => blockEvent,\n    getContractEvents: (0, gatewayutils_1.cachedResult)(() => (0, fullcontracteventfactory_1.newFullContractEvents)(privateTransactionEvent))\n  };\n  return Object.freeze(privateTransactionEvent);\n}","map":{"version":3,"names":["gatewayutils_1","require","fullblockeventfactory_1","fullcontracteventfactory_1","fulltransactioneventfactory_1","util","__importStar","newPrivateBlockEvent","eventInfo","privateData","Error","inspect","fullBlockEvent","newFullBlockEvent","privateBlockEvent","blockNumber","blockData","getTransactionEvents","cachedResult","newPrivateTransactionEvents","Object","freeze","exports","blockEvent","getTransactionEnvelopeIndexes","map","index","newPrivateTransactionEvent","fullTransactionEvent","newFullTransactionEvent","privateTransactionEvent","transactionId","status","transactionData","isValid","timestamp","getBlockEvent","getContractEvents","newFullContractEvents"],"sources":["../../../src/impl/event/privateblockeventfactory.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,MAAAA,cAAA,GAAAC,OAAA;AACA,MAAAC,uBAAA,GAAAD,OAAA;AACA,MAAAE,0BAAA,GAAAF,OAAA;AACA,MAAAG,6BAAA,GAAAH,OAAA;AAEA,MAAAI,IAAA,GAAAC,YAAA,CAAAL,OAAA;AAEA,SAAgBM,oBAAoBA,CAACC,SAAoB;EACxD,MAAMC,WAAW,GAAGD,SAAS,CAACC,WAAW;EACzC,IAAI,CAACA,WAAW,EAAE;IACjB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGL,IAAI,CAACM,OAAO,CAACH,SAAS,CAAC,CAAC;;EAGrE,MAAMI,cAAc,GAAG,IAAAV,uBAAA,CAAAW,iBAAiB,EAACL,SAAS,CAAC;EAEnD,MAAMM,iBAAiB,GAAe;IACrCC,WAAW,EAAEH,cAAc,CAACG,WAAW;IACvCC,SAAS,EAAEJ,cAAc,CAACI,SAAS;IACnCC,oBAAoB,EAAE,IAAAjB,cAAA,CAAAkB,YAAY,EAAC,MAAMC,2BAA2B,CAACL,iBAAiB,EAAEL,WAAW,CAAC;GACpG;EAED,OAAOW,MAAM,CAACC,MAAM,CAACP,iBAAiB,CAAC;AACxC;AAfAQ,OAAA,CAAAf,oBAAA,GAAAA,oBAAA;AAiBA,SAASY,2BAA2BA,CAACI,UAAsB,EAAEd,WAAwB;EACpF,OAAO,IAAAL,6BAAA,CAAAoB,6BAA6B,EAACD,UAAU,CAACP,SAAmC,CAAC,CAClFS,GAAG,CAAEC,KAAK,IAAKC,0BAA0B,CAACJ,UAAU,EAAEG,KAAK,EAAEjB,WAAW,CAACiB,KAAK,CAAC,CAAC,CAAC;AACpF;AAEA;AACA,SAASC,0BAA0BA,CAACJ,UAAsB,EAAEG,KAAa,EAAEjB,WAAgB;EAC1F,MAAMmB,oBAAoB,GAAG,IAAAxB,6BAAA,CAAAyB,uBAAuB,EAACN,UAAU,EAAEG,KAAK,CAAC;EAEvE,MAAMI,uBAAuB,GAAqB;IACjDC,aAAa,EAAEH,oBAAoB,CAACG,aAAa;IACjDC,MAAM,EAAEJ,oBAAoB,CAACI,MAAM;IACnCC,eAAe,EAAEL,oBAAoB,CAACK,eAAe;IACrDC,OAAO,EAAEN,oBAAoB,CAACM,OAAO;IACrCC,SAAS,EAAEP,oBAAoB,CAACO,SAAS;IACzC;IACA1B,WAAW;IACX2B,aAAa,EAAEA,CAAA,KAAMb,UAAU;IAC/Bc,iBAAiB,EAAE,IAAArC,cAAA,CAAAkB,YAAY,EAAC,MAAM,IAAAf,0BAAA,CAAAmC,qBAAqB,EAACR,uBAAuB,CAAC;GACpF;EAED,OAAOV,MAAM,CAACC,MAAM,CAACS,uBAAuB,CAAC;AAC9C"},"metadata":{},"sourceType":"script","externalDependencies":[]}