{"ast":null,"code":"'use strict';\n\nvar crypto = require('crypto');\nvar json = {\n  stringify: function (obj, replacer, spacing) {\n    return JSON.stringify(obj, replacer || null, spacing || 2);\n  },\n  parse: JSON.parse\n};\nmodule.exports = Secure;\n/**\n * @constructor\n * Simple Object used to serialize and deserialize\n */\nfunction Secure(opts) {\n  opts = opts || {};\n  this.secret = typeof opts !== 'string' ? opts.secret : opts;\n  this.format = opts.format || json;\n  this.alg = opts.alg || 'aes-256-ctr';\n  if (!this.secret) throw new Error('Secret is a required option');\n}\nSecure.prototype.encrypt = function encrypt(data, callback) {\n  var self = this;\n  return Object.keys(data).reduce(function (acc, key) {\n    var value = self.format.stringify(data[key]);\n    acc[key] = {\n      alg: self.alg,\n      value: cipherConvert(value, {\n        alg: self.alg,\n        secret: self.secret,\n        encs: {\n          input: 'utf8',\n          output: 'hex'\n        }\n      })\n    };\n    return acc;\n  }, {});\n};\nSecure.prototype.decrypt = function decrypt(data, callback) {\n  var self = this;\n  return Object.keys(data).reduce(function (acc, key) {\n    var decrypted = cipherConvert(data[key].value, {\n      alg: data[key].alg || self.alg,\n      secret: self.secret,\n      encs: {\n        input: 'hex',\n        output: 'utf8'\n      }\n    });\n    acc[key] = self.format.parse(decrypted);\n    return acc;\n  }, {});\n};\n\n//\n// ### function cipherConvert (contents, opts)\n// Returns the result of the cipher operation\n// on the contents contents.\n//\nfunction cipherConvert(contents, opts) {\n  var encs = opts.encs;\n  var cipher = crypto.createCipher(opts.alg, opts.secret);\n  return cipher.update(contents, encs.input, encs.output) + cipher.final(encs.output);\n}","map":{"version":3,"names":["crypto","require","json","stringify","obj","replacer","spacing","JSON","parse","module","exports","Secure","opts","secret","format","alg","Error","prototype","encrypt","data","callback","self","Object","keys","reduce","acc","key","value","cipherConvert","encs","input","output","decrypt","decrypted","contents","cipher","createCipher","update","final"],"sources":["/home/deepakraj/Desktop/Ticket-ADDA/ticketadda/client/node_modules/secure-keys/index.js"],"sourcesContent":["'use strict';\n\nvar crypto = require('crypto');\n\nvar json = {\n  stringify: function (obj, replacer, spacing) {\n    return JSON.stringify(obj, replacer || null, spacing || 2)\n  },\n  parse: JSON.parse\n};\n\nmodule.exports = Secure;\n/**\n * @constructor\n * Simple Object used to serialize and deserialize\n */\nfunction Secure(opts) {\n  opts = opts || {};\n  this.secret = typeof opts !== 'string'\n    ? opts.secret\n    : opts;\n\n  this.format = opts.format || json;\n  this.alg = opts.alg || 'aes-256-ctr';\n\n  if (!this.secret) throw new Error('Secret is a required option');\n}\n\nSecure.prototype.encrypt = function encrypt(data, callback) {\n  var self = this;\n\n  return Object.keys(data).reduce(function (acc, key) {\n    var value = self.format.stringify(data[key]);\n    acc[key] = {\n      alg: self.alg,\n      value: cipherConvert(value, {\n        alg: self.alg,\n        secret: self.secret,\n        encs: { input: 'utf8', output: 'hex' }\n      })\n    };\n\n    return acc;\n  }, {});\n\n };\n\nSecure.prototype.decrypt = function decrypt(data, callback) {\n  var self = this;\n\n  return Object.keys(data).reduce(function (acc, key) {\n    var decrypted = cipherConvert(data[key].value, {\n      alg: data[key].alg || self.alg,\n      secret: self.secret,\n      encs: { input: 'hex', output: 'utf8' }\n    });\n\n    acc[key] = self.format.parse(decrypted);\n    return acc;\n  }, {});\n\n };\n\n//\n// ### function cipherConvert (contents, opts)\n// Returns the result of the cipher operation\n// on the contents contents.\n//\nfunction cipherConvert(contents, opts) {\n  var encs = opts.encs;\n  var cipher = crypto.createCipher(opts.alg, opts.secret);\n  return cipher.update(contents, encs.input, encs.output)\n    + cipher.final(encs.output);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}