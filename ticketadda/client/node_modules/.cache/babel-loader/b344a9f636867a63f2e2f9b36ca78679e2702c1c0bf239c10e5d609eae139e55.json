{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newFullTransactionEvent = exports.getTransactionEnvelopeIndexes = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nconst fabproto6 = __importStar(require(\"fabric-protos\"));\nconst gatewayutils_1 = require(\"../gatewayutils\");\nconst fullcontracteventfactory_1 = require(\"./fullcontracteventfactory\");\nconst TransactionStatus = __importStar(require(\"./transactionstatus\"));\nfunction getTransactionEnvelopeIndexes(blockData) {\n  const txEnvelopeIndexes = [];\n  if (blockData.data) {\n    const envelopes = blockData.data.data || [];\n    envelopes.forEach((envelope, index) => {\n      if (isTransactionPayload(envelope.payload)) {\n        txEnvelopeIndexes.push(index);\n      }\n    });\n  }\n  return txEnvelopeIndexes;\n}\nexports.getTransactionEnvelopeIndexes = getTransactionEnvelopeIndexes;\nfunction isTransactionPayload(payload) {\n  return payload.header.channel_header.type === fabproto6.common.HeaderType.ENDORSER_TRANSACTION;\n}\nfunction newFullTransactionEvent(blockEvent, txEnvelopeIndex) {\n  const block = blockEvent.blockData;\n  if (block.metadata && block.data && block.data.data) {\n    const blockMetadata = block.metadata.metadata || [];\n    const transactionStatusCodes = blockMetadata[fabproto6.common.BlockMetadataIndex.TRANSACTIONS_FILTER];\n    const envelope = block.data.data[txEnvelopeIndex];\n    const transactionId = envelope.payload.header.channel_header.tx_id;\n    const timestamp = new Date(envelope.payload.header.channel_header.timestamp);\n    const code = transactionStatusCodes[txEnvelopeIndex];\n    const status = TransactionStatus.getStatusForCode(code);\n    const transactionEvent = {\n      transactionId,\n      status,\n      transactionData: envelope.payload.data,\n      isValid: status === TransactionStatus.VALID_STATUS,\n      timestamp,\n      getBlockEvent: () => blockEvent,\n      getContractEvents: (0, gatewayutils_1.cachedResult)(() => (0, fullcontracteventfactory_1.newFullContractEvents)(transactionEvent))\n    };\n    return Object.freeze(transactionEvent);\n  }\n  throw Error('Missing transaction data');\n}\nexports.newFullTransactionEvent = newFullTransactionEvent;","map":{"version":3,"names":["fabproto6","__importStar","require","gatewayutils_1","fullcontracteventfactory_1","TransactionStatus","getTransactionEnvelopeIndexes","blockData","txEnvelopeIndexes","data","envelopes","forEach","envelope","index","isTransactionPayload","payload","push","exports","header","channel_header","type","common","HeaderType","ENDORSER_TRANSACTION","newFullTransactionEvent","blockEvent","txEnvelopeIndex","block","metadata","blockMetadata","transactionStatusCodes","BlockMetadataIndex","TRANSACTIONS_FILTER","transactionId","tx_id","timestamp","Date","code","status","getStatusForCode","transactionEvent","transactionData","isValid","VALID_STATUS","getBlockEvent","getContractEvents","cachedResult","newFullContractEvents","Object","freeze","Error"],"sources":["../../../src/impl/event/fulltransactioneventfactory.ts"],"sourcesContent":[null],"mappings":";;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AAEA,MAAAA,SAAA,GAAAC,YAAA,CAAAC,OAAA;AAEA,MAAAC,cAAA,GAAAD,OAAA;AACA,MAAAE,0BAAA,GAAAF,OAAA;AACA,MAAAG,iBAAA,GAAAJ,YAAA,CAAAC,OAAA;AAEA,SAAgBI,6BAA6BA,CAACC,SAAkC;EAC/E,MAAMC,iBAAiB,GAAa,EAAE;EACtC,IAAID,SAAS,CAACE,IAAI,EAAE;IACnB,MAAMC,SAAS,GAAUH,SAAS,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE;IAClDC,SAAS,CAACC,OAAO,CAAC,CAACC,QAAa,EAAEC,KAAa,KAAI;MAClD,IAAIC,oBAAoB,CAACF,QAAQ,CAACG,OAAO,CAAC,EAAE;QAC3CP,iBAAiB,CAACQ,IAAI,CAACH,KAAK,CAAC;;IAE/B,CAAC,CAAC;;EAGH,OAAOL,iBAAiB;AACzB;AAZAS,OAAA,CAAAX,6BAAA,GAAAA,6BAAA;AAcA,SAASQ,oBAAoBA,CAACC,OAAY;EACzC,OAAOA,OAAO,CAACG,MAAM,CAACC,cAAc,CAACC,IAAI,KAAKpB,SAAS,CAACqB,MAAM,CAACC,UAAU,CAACC,oBAAoB;AAC/F;AAEA,SAAgBC,uBAAuBA,CAACC,UAAsB,EAAEC,eAAuB;EACtF,MAAMC,KAAK,GAAGF,UAAU,CAAClB,SAAmC;EAC5D,IAAIoB,KAAK,CAACC,QAAQ,IAAID,KAAK,CAAClB,IAAI,IAAIkB,KAAK,CAAClB,IAAI,CAACA,IAAI,EAAE;IACpD,MAAMoB,aAAa,GAAUF,KAAK,CAACC,QAAQ,CAACA,QAAQ,IAAI,EAAE;IAC1D,MAAME,sBAAsB,GAAGD,aAAa,CAAC7B,SAAS,CAACqB,MAAM,CAACU,kBAAkB,CAACC,mBAAmB,CAAa;IAEjH,MAAMpB,QAAQ,GAAQe,KAAK,CAAClB,IAAI,CAACA,IAAI,CAACiB,eAAe,CAAC;IACtD,MAAMO,aAAa,GAAGrB,QAAQ,CAACG,OAAO,CAACG,MAAM,CAACC,cAAc,CAACe,KAAK;IAClE,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACxB,QAAQ,CAACG,OAAO,CAACG,MAAM,CAACC,cAAc,CAACgB,SAAmC,CAAC;IACtG,MAAME,IAAI,GAAGP,sBAAsB,CAACJ,eAAe,CAAC;IACpD,MAAMY,MAAM,GAAGjC,iBAAiB,CAACkC,gBAAgB,CAACF,IAAI,CAAC;IAEvD,MAAMG,gBAAgB,GAAqB;MAC1CP,aAAa;MACbK,MAAM;MACNG,eAAe,EAAE7B,QAAQ,CAACG,OAAO,CAACN,IAAI;MACtCiC,OAAO,EAAEJ,MAAM,KAAKjC,iBAAiB,CAACsC,YAAY;MAClDR,SAAS;MACTS,aAAa,EAAEA,CAAA,KAAMnB,UAAU;MAC/BoB,iBAAiB,EAAE,IAAA1C,cAAA,CAAA2C,YAAY,EAAC,MAAM,IAAA1C,0BAAA,CAAA2C,qBAAqB,EAACP,gBAAgB,CAAC;KAC7E;IAED,OAAOQ,MAAM,CAACC,MAAM,CAACT,gBAAgB,CAAC;;EAGvC,MAAMU,KAAK,CAAC,0BAA0B,CAAC;AACxC;AA1BAjC,OAAA,CAAAO,uBAAA,GAAAA,uBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}