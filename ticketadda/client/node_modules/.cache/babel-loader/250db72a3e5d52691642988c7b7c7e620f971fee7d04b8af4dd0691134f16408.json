{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractListenerSession = void 0;\nconst Logger = __importStar(require(\"../../logger\"));\nconst Listeners = __importStar(require(\"./listeners\"));\nconst logger = Logger.getLogger('ContractListenerSession');\nclass ContractListenerSession {\n  constructor(listener, chaincodeId, network, options) {\n    this.listener = listener;\n    this.chaincodeId = chaincodeId;\n    this.network = network;\n    this.blockListener = this.newBlockListener(options);\n    this.options = options;\n  }\n  async start() {\n    await this.network.addBlockListener(this.blockListener, this.options);\n  }\n  close() {\n    this.network.removeBlockListener(this.blockListener);\n  }\n  newBlockListener(options) {\n    const callback = this.onContractEvent.bind(this);\n    return Listeners.blockFromContractListener(callback, options === null || options === void 0 ? void 0 : options.checkpointer);\n  }\n  async onContractEvent(event) {\n    if (this.isMatch(event)) {\n      await this.notifyListener(event);\n    }\n  }\n  isMatch(event) {\n    return event.chaincodeId === this.chaincodeId;\n  }\n  async notifyListener(event) {\n    try {\n      await this.listener(event);\n    } catch (error) {\n      logger.warn('Error notifying contract listener', error);\n    }\n  }\n}\nexports.ContractListenerSession = ContractListenerSession;","map":{"version":3,"names":["Logger","__importStar","require","Listeners","logger","getLogger","ContractListenerSession","constructor","listener","chaincodeId","network","options","blockListener","newBlockListener","start","addBlockListener","close","removeBlockListener","callback","onContractEvent","bind","blockFromContractListener","checkpointer","event","isMatch","notifyListener","error","warn","exports"],"sources":["../../../src/impl/event/contractlistenersession.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,MAAAA,MAAA,GAAAC,YAAA,CAAAC,OAAA;AAEA,MAAAC,SAAA,GAAAF,YAAA,CAAAC,OAAA;AAEA,MAAME,MAAM,GAAGJ,MAAM,CAACK,SAAS,CAAC,yBAAyB,CAAC;AAE1D,MAAaC,uBAAuB;EAOnCC,YAAYC,QAA0B,EAAEC,WAAmB,EAAEC,OAAgB,EAAEC,OAAyB;IACvG,IAAI,CAACH,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACF,OAAO,CAAC;IACnD,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;EAEO,MAAMG,KAAKA,CAAA;IACjB,MAAM,IAAI,CAACJ,OAAO,CAACK,gBAAgB,CAAC,IAAI,CAACH,aAAa,EAAE,IAAI,CAACD,OAAO,CAAC;EACtE;EAEOK,KAAKA,CAAA;IACX,IAAI,CAACN,OAAO,CAACO,mBAAmB,CAAC,IAAI,CAACL,aAAa,CAAC;EACrD;EAEQC,gBAAgBA,CAACF,OAAyB;IACjD,MAAMO,QAAQ,GAAG,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,OAAOjB,SAAS,CAACkB,yBAAyB,CAACH,QAAQ,EAAEP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,YAAY,CAAC;EAC5E;EAEQ,MAAMH,eAAeA,CAACI,KAAoB;IACjD,IAAI,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC,EAAE;MACxB,MAAM,IAAI,CAACE,cAAc,CAACF,KAAK,CAAC;;EAElC;EAEQC,OAAOA,CAACD,KAAoB;IACnC,OAAOA,KAAK,CAACd,WAAW,KAAK,IAAI,CAACA,WAAW;EAC9C;EAEQ,MAAMgB,cAAcA,CAACF,KAAoB;IAChD,IAAI;MACH,MAAM,IAAI,CAACf,QAAQ,CAACe,KAAK,CAAC;KAC1B,CAAC,OAAOG,KAAK,EAAE;MACftB,MAAM,CAACuB,IAAI,CAAC,mCAAmC,EAAED,KAAK,CAAC;;EAEzD;;AA5CDE,OAAA,CAAAtB,uBAAA,GAAAA,uBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}