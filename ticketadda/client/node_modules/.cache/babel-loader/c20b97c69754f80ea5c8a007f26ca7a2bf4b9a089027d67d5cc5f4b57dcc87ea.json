{"ast":null,"code":"/*\n * argv.js: Simple memory-based store for command-line arguments.\n *\n * (C) 2011, Charlie Robbins and the Contributors.\n *\n */\n\nvar util = require('util'),\n  common = require('../common'),\n  Memory = require('./memory').Memory;\n\n//\n// ### function Argv (options)\n// #### @options {Object} Options for this instance.\n// Constructor function for the Argv nconf store, a simple abstraction\n// around the Memory store that can read command-line arguments.\n//\nvar Argv = exports.Argv = function (options, usage) {\n  Memory.call(this, options);\n  options = options || {};\n  this.type = 'argv';\n  this.readOnly = true;\n  this.options = options;\n  this.usage = usage;\n  if (typeof options.parseValues === 'boolean') {\n    this.parseValues = options.parseValues;\n    delete options.parseValues;\n  } else {\n    this.parseValues = false;\n  }\n  if (typeof options.transform === 'function') {\n    this.transform = options.transform;\n    delete options.transform;\n  } else {\n    this.transform = false;\n  }\n  if (typeof options.separator === 'string' || options.separator instanceof RegExp) {\n    this.separator = options.separator;\n    delete options.separator;\n  } else {\n    this.separator = '';\n  }\n};\n\n// Inherit from the Memory store\nutil.inherits(Argv, Memory);\n\n//\n// ### function loadSync ()\n// Loads the data passed in from `process.argv` into this instance.\n//\nArgv.prototype.loadSync = function () {\n  this.loadArgv();\n  return this.store;\n};\n\n//\n// ### function loadArgv ()\n// Loads the data passed in from the command-line arguments\n// into this instance.\n//\nArgv.prototype.loadArgv = function () {\n  var self = this,\n    yargs,\n    argv;\n  yargs = isYargs(this.options) ? this.options : typeof this.options === 'object' ? require('yargs')(process.argv.slice(2)).options(this.options) : require('yargs')(process.argv.slice(2));\n  if (typeof this.usage === 'string') {\n    yargs.usage(this.usage);\n  }\n  argv = yargs.argv;\n  if (!argv) {\n    return;\n  }\n  if (this.transform) {\n    argv = common.transform(argv, this.transform);\n  }\n  this.readOnly = false;\n  Object.keys(argv).forEach(function (key) {\n    var val = argv[key];\n    if (typeof val !== 'undefined') {\n      if (self.parseValues) {\n        val = common.parseValues(val);\n      }\n      if (self.separator) {\n        self.set(common.key.apply(common, key.split(self.separator)), val);\n      } else {\n        self.set(key, val);\n      }\n    }\n  });\n  this.showHelp = yargs.showHelp;\n  this.help = yargs.help;\n  this.readOnly = true;\n  return this.store;\n};\nfunction isYargs(obj) {\n  return (typeof obj === 'function' || typeof obj === 'object') && 'argv' in obj;\n}","map":{"version":3,"names":["util","require","common","Memory","Argv","exports","options","usage","call","type","readOnly","parseValues","transform","separator","RegExp","inherits","prototype","loadSync","loadArgv","store","self","yargs","argv","isYargs","process","slice","Object","keys","forEach","key","val","set","apply","split","showHelp","help","obj"],"sources":["/home/deepakraj/Desktop/Ticket-ADDA/ticketadda/client/node_modules/nconf/lib/nconf/stores/argv.js"],"sourcesContent":["/*\n * argv.js: Simple memory-based store for command-line arguments.\n *\n * (C) 2011, Charlie Robbins and the Contributors.\n *\n */\n\nvar util = require('util'),\n    common = require('../common'),\n    Memory = require('./memory').Memory;\n\n//\n// ### function Argv (options)\n// #### @options {Object} Options for this instance.\n// Constructor function for the Argv nconf store, a simple abstraction\n// around the Memory store that can read command-line arguments.\n//\nvar Argv = exports.Argv = function (options, usage) {\n  Memory.call(this, options);\n\n  options        = options || {};\n  this.type     = 'argv';\n  this.readOnly = true;\n  this.options  = options;\n  this.usage    = usage;\n  if(typeof options.parseValues === 'boolean') {\n      this.parseValues = options.parseValues;\n      delete options.parseValues;\n  } else {\n      this.parseValues = false;\n  }\n  if (typeof options.transform === 'function')Â {\n      this.transform = options.transform;\n      delete options.transform;\n  } else {\n      this.transform = false;\n  }\n  if (typeof options.separator === 'string' || options.separator instanceof RegExp) {\n    this.separator = options.separator;\n    delete options.separator;\n  } else {\n    this.separator = '';\n  }\n};\n\n// Inherit from the Memory store\nutil.inherits(Argv, Memory);\n\n//\n// ### function loadSync ()\n// Loads the data passed in from `process.argv` into this instance.\n//\nArgv.prototype.loadSync = function () {\n  this.loadArgv();\n  return this.store;\n};\n\n//\n// ### function loadArgv ()\n// Loads the data passed in from the command-line arguments\n// into this instance.\n//\nArgv.prototype.loadArgv = function () {\n  var self = this,\n      yargs, argv;\n\n  yargs = isYargs(this.options) ?\n    this.options :\n    typeof this.options === 'object' ?\n      require('yargs')(process.argv.slice(2)).options(this.options) :\n      require('yargs')(process.argv.slice(2));\n\n  if (typeof this.usage === 'string') { yargs.usage(this.usage) }\n\n  argv = yargs.argv\n\n  if (!argv) {\n    return;\n  }\n\n  if (this.transform) {\n    argv = common.transform(argv, this.transform);\n  }\n\n  this.readOnly = false;\n  Object.keys(argv).forEach(function (key) {\n    var val = argv[key];\n\n    if (typeof val !== 'undefined') {\n      if (self.parseValues) {\n        val = common.parseValues(val);\n      }\n\n      if (self.separator) {\n        self.set(common.key.apply(common, key.split(self.separator)), val);\n      }\n      else {\n        self.set(key, val);\n      }\n    }\n  });\n\n  this.showHelp = yargs.showHelp\n  this.help     = yargs.help\n\n  this.readOnly = true;\n  return this.store;\n};\n\nfunction isYargs(obj) {\n  return (typeof obj === 'function' || typeof obj === 'object') && ('argv' in obj);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}