{"ast":null,"code":"/*\n * Copyright 2019 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst TYPE = 'Endorsement';\nconst {\n  checkParameter,\n  getLogger\n} = require('./Utils.js');\nconst logger = getLogger(TYPE);\nconst Proposal = require('./Proposal.js');\nconst Commit = require('./Commit.js');\n\n/**\n * @classdesc\n * This class represents an Endorsement definition.\n * This class allows an application to contain all proposal attributes and\n * artifacts in one place during an endorsement.\n *\n * @class\n */\nclass Endorsement extends Proposal {\n  /**\n   * Construct a Proposal object.\n   *\n   * @param {string} chaincodeId - The chaincode this proposal will execute\n   * @param {Channel} channel - The channel of this proposal\n   * @returns {Proposal} The Proposal instance.\n   */\n  constructor() {\n    let chaincodeId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : checkParameter('chaincodeId');\n    let channel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : checkParameter('channel');\n    super(chaincodeId, channel);\n    const method = `constructor[${chaincodeId}]`;\n    logger.debug('%s - start', method);\n    this.type = TYPE;\n  }\n\n  /**\n   * Gets a Commit instance for this endorsement.\n   */\n  newCommit() {\n    const method = `newCommit[${this.name}]`;\n    logger.debug(`${method} - start`);\n    return new Commit(this.chaincodeId, this.channel, this);\n  }\n\n  /**\n   * return a printable representation of this object\n   */\n  toString() {\n    return `Endorsement: {chaincodeId: ${this.chaincodeId}, channel: ${this.channel.name}}`;\n  }\n}\nmodule.exports = Endorsement;","map":{"version":3,"names":["TYPE","checkParameter","getLogger","require","logger","Proposal","Commit","Endorsement","constructor","chaincodeId","arguments","length","undefined","channel","method","debug","type","newCommit","name","toString","module","exports"],"sources":["/home/deepakraj/Desktop/Ticket-ADDA/ticketadda/client/node_modules/fabric-common/lib/Endorsement.js"],"sourcesContent":["/*\n * Copyright 2019 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst TYPE = 'Endorsement';\n\nconst {checkParameter, getLogger} = require('./Utils.js');\nconst logger = getLogger(TYPE);\n\nconst Proposal = require('./Proposal.js');\nconst Commit = require('./Commit.js');\n\n/**\n * @classdesc\n * This class represents an Endorsement definition.\n * This class allows an application to contain all proposal attributes and\n * artifacts in one place during an endorsement.\n *\n * @class\n */\nclass Endorsement extends Proposal {\n\n\t/**\n\t * Construct a Proposal object.\n\t *\n\t * @param {string} chaincodeId - The chaincode this proposal will execute\n\t * @param {Channel} channel - The channel of this proposal\n\t * @returns {Proposal} The Proposal instance.\n\t */\n\tconstructor(chaincodeId = checkParameter('chaincodeId'), channel = checkParameter('channel')) {\n\t\tsuper(chaincodeId, channel);\n\t\tconst method = `constructor[${chaincodeId}]`;\n\t\tlogger.debug('%s - start', method);\n\t\tthis.type = TYPE;\n\t}\n\n\t/**\n\t * Gets a Commit instance for this endorsement.\n\t */\n\tnewCommit() {\n\t\tconst method = `newCommit[${this.name}]`;\n\t\tlogger.debug(`${method} - start`);\n\n\t\treturn new Commit(this.chaincodeId, this.channel, this);\n\t}\n\n\t/**\n\t * return a printable representation of this object\n\t */\n\ttoString() {\n\n\t\treturn `Endorsement: {chaincodeId: ${this.chaincodeId}, channel: ${this.channel.name}}`;\n\t}\n}\n\nmodule.exports = Endorsement;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAG,aAAa;AAE1B,MAAM;EAACC,cAAc;EAAEC;AAAS,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AACzD,MAAMC,MAAM,GAAGF,SAAS,CAACF,IAAI,CAAC;AAE9B,MAAMK,QAAQ,GAAGF,OAAO,CAAC,eAAe,CAAC;AACzC,MAAMG,MAAM,GAAGH,OAAO,CAAC,aAAa,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,WAAW,SAASF,QAAQ,CAAC;EAElC;AACD;AACA;AACA;AACA;AACA;AACA;EACCG,WAAWA,CAAA,EAAmF;IAAA,IAAlFC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,cAAc,CAAC,aAAa,CAAC;IAAA,IAAEY,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,cAAc,CAAC,SAAS,CAAC;IAC3F,KAAK,CAACQ,WAAW,EAAEI,OAAO,CAAC;IAC3B,MAAMC,MAAM,GAAI,eAAcL,WAAY,GAAE;IAC5CL,MAAM,CAACW,KAAK,CAAC,YAAY,EAAED,MAAM,CAAC;IAClC,IAAI,CAACE,IAAI,GAAGhB,IAAI;EACjB;;EAEA;AACD;AACA;EACCiB,SAASA,CAAA,EAAG;IACX,MAAMH,MAAM,GAAI,aAAY,IAAI,CAACI,IAAK,GAAE;IACxCd,MAAM,CAACW,KAAK,CAAE,GAAED,MAAO,UAAS,CAAC;IAEjC,OAAO,IAAIR,MAAM,CAAC,IAAI,CAACG,WAAW,EAAE,IAAI,CAACI,OAAO,EAAE,IAAI,CAAC;EACxD;;EAEA;AACD;AACA;EACCM,QAAQA,CAAA,EAAG;IAEV,OAAQ,8BAA6B,IAAI,CAACV,WAAY,cAAa,IAAI,CAACI,OAAO,CAACK,IAAK,GAAE;EACxF;AACD;AAEAE,MAAM,CAACC,OAAO,GAAGd,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}