{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BlockEventSource = void 0;\nconst Logger = __importStar(require(\"../../logger\"));\nconst GatewayUtils = __importStar(require(\"../gatewayutils\"));\nconst asyncnotifier_1 = require(\"./asyncnotifier\");\nconst filteredblockeventfactory_1 = require(\"./filteredblockeventfactory\");\nconst fullblockeventfactory_1 = require(\"./fullblockeventfactory\");\nconst orderedblockqueue_1 = require(\"./orderedblockqueue\");\nconst privateblockeventfactory_1 = require(\"./privateblockeventfactory\");\nconst gatewayutils_1 = require(\"../gatewayutils\");\nconst Long = __importStar(require(\"long\"));\nconst logger = Logger.getLogger('BlockEventSource');\nconst defaultBlockType = 'filtered';\nfunction newBlockQueue(options) {\n  const startBlock = asLong(options.startBlock);\n  return new orderedblockqueue_1.OrderedBlockQueue(startBlock);\n}\nfunction asLong(value) {\n  if ((0, gatewayutils_1.notNullish)(value)) {\n    return Long.fromValue(value);\n  }\n  return undefined;\n}\nclass BlockEventSource {\n  constructor(eventServiceManager) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.listeners = new Set();\n    this.state = 'ready';\n    this.eventServiceManager = eventServiceManager;\n    this.blockQueue = newBlockQueue(options);\n    this.asyncNotifier = new asyncnotifier_1.AsyncNotifier(this.blockQueue.getNextBlock.bind(this.blockQueue), this.notifyListeners.bind(this));\n    this.blockType = options.type || defaultBlockType;\n    logger.debug('constructor - blockType:%s', this.blockType);\n  }\n  async addBlockListener(listener) {\n    this.listeners.add(listener);\n    await this.start();\n    return listener;\n  }\n  removeBlockListener(listener) {\n    this.listeners.delete(listener);\n  }\n  setState(state) {\n    if (this.state !== 'stopped') {\n      this.state = state;\n    }\n  }\n  close() {\n    this.setState('stopped');\n    logger.debug('state set to  - :%s', this.state);\n    this._close();\n  }\n  _close() {\n    var _a;\n    this.unregisterListener();\n    (_a = this.eventService) === null || _a === void 0 ? void 0 : _a.close();\n    this.setState('ready');\n    logger.debug('state set to  - :%s', this.state);\n    if (this.restart) {\n      clearImmediate(this.restart);\n    }\n  }\n  async start() {\n    logger.debug('state - :%s', this.state);\n    if (this.state !== 'ready') {\n      return;\n    }\n    this.state = 'started';\n    try {\n      this.eventService = this.eventServiceManager.newDefaultEventService();\n      this.registerListener(); // Register before start so no events are missed\n      logger.debug('start - calling startEventService');\n      await this.startEventService();\n    } catch (error) {\n      logger.error('Failed to start event service', error);\n      this._close();\n      this.restart = setImmediate(() => {\n        void this.start();\n      });\n    }\n  }\n  registerListener() {\n    const callback = this.blockEventCallback.bind(this);\n    const options = {\n      startBlock: this.getNextBlockNumber(),\n      unregister: false\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.eventListener = this.eventService.registerBlockListener(callback, options);\n  }\n  unregisterListener() {\n    var _a;\n    try {\n      (_a = this.eventListener) === null || _a === void 0 ? void 0 : _a.unregisterEventListener();\n    } catch (error) {\n      logger.warn('Failed to unregister listener', error);\n    }\n  }\n  async startEventService() {\n    let startBlock = this.getNextBlockNumber();\n    if (startBlock) {\n      startBlock = startBlock.subtract(Long.ONE);\n      if (startBlock.isNegative()) {\n        startBlock = Long.ZERO;\n      }\n    }\n    const options = {\n      blockType: this.blockType,\n      startBlock\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    await this.eventServiceManager.startEventService(this.eventService, options);\n  }\n  blockEventCallback(error, event) {\n    if (error) {\n      this._close();\n      this.restart = setImmediate(() => {\n        void this.start();\n      }); // Must schedule after current event loop to avoid recursion in event service notification\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.onBlockEvent(event);\n    }\n  }\n  onBlockEvent(eventInfo) {\n    const blockEvent = this.newBlockEvent(eventInfo);\n    this.blockQueue.addBlock(blockEvent);\n    if (this.blockQueue.size() > 0) {\n      this.asyncNotifier.notify();\n    }\n  }\n  newBlockEvent(eventInfo) {\n    if (this.blockType === 'filtered') {\n      return (0, filteredblockeventfactory_1.newFilteredBlockEvent)(eventInfo);\n    } else if (this.blockType === 'full') {\n      return (0, fullblockeventfactory_1.newFullBlockEvent)(eventInfo);\n    } else if (this.blockType === 'private') {\n      return (0, privateblockeventfactory_1.newPrivateBlockEvent)(eventInfo);\n    } else {\n      throw new Error(`Unsupported event type: ${this.blockType}`);\n    }\n  }\n  async notifyListeners(event) {\n    const promises = Array.from(this.listeners).map(listener => listener(event));\n    const results = await GatewayUtils.allSettled(promises);\n    for (const result of results) {\n      if (result.status === 'rejected') {\n        logger.warn('Error notifying listener', result.reason);\n      }\n    }\n  }\n  getNextBlockNumber() {\n    return this.blockQueue.getNextBlockNumber();\n  }\n}\nexports.BlockEventSource = BlockEventSource;","map":{"version":3,"names":["Logger","__importStar","require","GatewayUtils","asyncnotifier_1","filteredblockeventfactory_1","fullblockeventfactory_1","orderedblockqueue_1","privateblockeventfactory_1","gatewayutils_1","Long","logger","getLogger","defaultBlockType","newBlockQueue","options","startBlock","asLong","OrderedBlockQueue","value","notNullish","fromValue","undefined","BlockEventSource","constructor","eventServiceManager","arguments","length","listeners","Set","state","blockQueue","asyncNotifier","AsyncNotifier","getNextBlock","bind","notifyListeners","blockType","type","debug","addBlockListener","listener","add","start","removeBlockListener","delete","setState","close","_close","unregisterListener","_a","eventService","restart","clearImmediate","newDefaultEventService","registerListener","startEventService","error","setImmediate","callback","blockEventCallback","getNextBlockNumber","unregister","eventListener","registerBlockListener","unregisterEventListener","warn","subtract","ONE","isNegative","ZERO","event","onBlockEvent","eventInfo","blockEvent","newBlockEvent","addBlock","size","notify","newFilteredBlockEvent","newFullBlockEvent","newPrivateBlockEvent","Error","promises","Array","from","map","results","allSettled","result","status","reason","exports"],"sources":["../../../src/impl/event/blockeventsource.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}