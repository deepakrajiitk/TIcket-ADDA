{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultCheckpointers = void 0;\nconst filecheckpointer_1 = require(\"./impl/filecheckpointer\");\n/**\n * Provides static factory functions used to create instances of default\n * {@link module:fabric-network.Checkpointer|Checkpointer} implementations.\n * @memberof module:fabric-network\n */\nclass DefaultCheckpointers {\n  /**\n   * Create a checkpointer that uses the specified file to store persistent state. If the file does not exist, it will\n   * be created and the checkpointer will have an uninitialized state that will accept any events. If the file does\n   * exist, it must contain valid checkpoint state.\n   * @param {string} path Path to a file holding persistent checkpoint state.\n   * @returns {Promise<module:fabric-network.Checkpointer>} A checkpointer.\n   */\n  static async file(path) {\n    const checkpointer = new filecheckpointer_1.FileCheckpointer(path);\n    await checkpointer.init();\n    return checkpointer;\n  }\n}\nexports.DefaultCheckpointers = DefaultCheckpointers;","map":{"version":3,"names":["filecheckpointer_1","require","DefaultCheckpointers","file","path","checkpointer","FileCheckpointer","init","exports"],"sources":["../src/defaultcheckpointers.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;AAOA,MAAAA,kBAAA,GAAAC,OAAA;AAEA;;;;;AAKA,MAAaC,oBAAoB;EAChC;;;;;;;EAOA,aAAaC,IAAIA,CAACC,IAAY;IAC7B,MAAMC,YAAY,GAAG,IAAIL,kBAAA,CAAAM,gBAAgB,CAACF,IAAI,CAAC;IAC/C,MAAMC,YAAY,CAACE,IAAI,EAAE;IACzB,OAAOF,YAAY;EACpB;;AAZDG,OAAA,CAAAN,oBAAA,GAAAA,oBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}