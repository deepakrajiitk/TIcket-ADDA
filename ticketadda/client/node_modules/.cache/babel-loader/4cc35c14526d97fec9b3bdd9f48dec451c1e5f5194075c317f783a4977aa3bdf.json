{"ast":null,"code":"/*\n * Copyright IBM Corp. All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst grpc = require('@grpc/grpc-js');\nconst protoLoader = require('@grpc/proto-loader');\nconst path = require('path');\nconst protobuf = require('protobufjs');\n// The static bundle built by protobufjs (see fabric-proto/package.json npm run command)\n// 'bundle.js' and typescript defs must be manually built when there is a change to the\n// proto files and pushed to the repository\n// The bundle.js has the full package hierarchy, however we will only be using the\n// messages which have create, decode, and encode. The services do not have a backing\n// implementation\nmodule.exports = require('./bundle.js');\n\n// Allow client code to translate the obscure uint64 field format to/from a number\nmodule.exports.numberToUint64 = protobuf.util.longToHash;\nmodule.exports.uint64ToNumber = uint64Value => {\n  const value = protobuf.util.longFromHash(uint64Value, true);\n  return typeof value === 'number' ? value : value.toInt();\n};\n\n// Build the services\n// fabric.proto file must have an import for every needed proto files\nconst protoPath = path.resolve(__dirname, 'fabric.proto');\nconst options = {\n  keepCase: true,\n  defaults: true,\n  oneofs: true,\n  includeDirs: [path.resolve(__dirname, 'google-protos'), path.resolve(__dirname, 'protos')]\n};\n\n// The protoDescriptor object has the full package hierarchy, however\n// we will only be using the services which may be used as classes\n// (ie. new Service()) that have the service implementation that will\n// send and receive messages.\nconst packageDefinitions = protoLoader.loadSync(protoPath, options);\nconst protoDescriptor = grpc.loadPackageDefinition(packageDefinitions);\nmodule.exports.services = protoDescriptor;","map":{"version":3,"names":["grpc","require","protoLoader","path","protobuf","module","exports","numberToUint64","util","longToHash","uint64ToNumber","uint64Value","value","longFromHash","toInt","protoPath","resolve","__dirname","options","keepCase","defaults","oneofs","includeDirs","packageDefinitions","loadSync","protoDescriptor","loadPackageDefinition","services"],"sources":["/home/deepakraj/Desktop/Ticket-ADDA/ticketadda/client/node_modules/fabric-protos/index.js"],"sourcesContent":["/*\n * Copyright IBM Corp. All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst grpc = require('@grpc/grpc-js');\nconst protoLoader = require('@grpc/proto-loader');\nconst path = require('path');\nconst protobuf = require('protobufjs');\n// The static bundle built by protobufjs (see fabric-proto/package.json npm run command)\n// 'bundle.js' and typescript defs must be manually built when there is a change to the\n// proto files and pushed to the repository\n// The bundle.js has the full package hierarchy, however we will only be using the\n// messages which have create, decode, and encode. The services do not have a backing\n// implementation\nmodule.exports = require('./bundle.js');\n\n// Allow client code to translate the obscure uint64 field format to/from a number\nmodule.exports.numberToUint64 = protobuf.util.longToHash;\nmodule.exports.uint64ToNumber = (uint64Value) => {\n\tconst value = protobuf.util.longFromHash(uint64Value, true);\n\treturn typeof value === 'number' ? value : value.toInt();\n}\n\n// Build the services\n// fabric.proto file must have an import for every needed proto files\nconst protoPath = path.resolve(__dirname, 'fabric.proto');\nconst options = {\n\tkeepCase: true,\n\tdefaults: true,\n\toneofs: true,\n\tincludeDirs: [\n\t\tpath.resolve(__dirname, 'google-protos'),\n\t\tpath.resolve(__dirname, 'protos')\n\t]\n};\n\n// The protoDescriptor object has the full package hierarchy, however\n// we will only be using the services which may be used as classes\n// (ie. new Service()) that have the service implementation that will\n// send and receive messages.\nconst packageDefinitions = protoLoader.loadSync(protoPath, options);\nconst protoDescriptor = grpc.loadPackageDefinition(packageDefinitions);\nmodule.exports.services = protoDescriptor;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,eAAe,CAAC;AACrC,MAAMC,WAAW,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,QAAQ,GAAGH,OAAO,CAAC,YAAY,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACAI,MAAM,CAACC,OAAO,GAAGL,OAAO,CAAC,aAAa,CAAC;;AAEvC;AACAI,MAAM,CAACC,OAAO,CAACC,cAAc,GAAGH,QAAQ,CAACI,IAAI,CAACC,UAAU;AACxDJ,MAAM,CAACC,OAAO,CAACI,cAAc,GAAIC,WAAW,IAAK;EAChD,MAAMC,KAAK,GAAGR,QAAQ,CAACI,IAAI,CAACK,YAAY,CAACF,WAAW,EAAE,IAAI,CAAC;EAC3D,OAAO,OAAOC,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,CAACE,KAAK,EAAE;AACzD,CAAC;;AAED;AACA;AACA,MAAMC,SAAS,GAAGZ,IAAI,CAACa,OAAO,CAACC,SAAS,EAAE,cAAc,CAAC;AACzD,MAAMC,OAAO,GAAG;EACfC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,IAAI;EACZC,WAAW,EAAE,CACZnB,IAAI,CAACa,OAAO,CAACC,SAAS,EAAE,eAAe,CAAC,EACxCd,IAAI,CAACa,OAAO,CAACC,SAAS,EAAE,QAAQ,CAAC;AAEnC,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMM,kBAAkB,GAAGrB,WAAW,CAACsB,QAAQ,CAACT,SAAS,EAAEG,OAAO,CAAC;AACnE,MAAMO,eAAe,GAAGzB,IAAI,CAAC0B,qBAAqB,CAACH,kBAAkB,CAAC;AACtElB,MAAM,CAACC,OAAO,CAACqB,QAAQ,GAAGF,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}