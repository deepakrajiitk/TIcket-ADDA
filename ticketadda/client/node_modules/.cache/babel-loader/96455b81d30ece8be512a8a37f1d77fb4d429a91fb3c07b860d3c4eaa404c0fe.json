{"ast":null,"code":"// Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\n\nconst {\n  URL\n} = require('url');\nconst assert = require('assert');\nconst querystring = require('qs');\nconst axios = require('axios').default;\nconst axiosCookieJarSupport = require('axios-cookiejar-support').default;\nconst tough = require('tough-cookie');\naxiosCookieJarSupport(axios);\nconst cookieJar = new tough.CookieJar();\nconst stream = require('stream');\nconst http = require('http');\nconst https = require('https');\nconst pkg = require('../package.json');\nconst AGENT_DEFAULTS = {\n  keepAlive: true,\n  maxSockets: 50,\n  keepAliveMsecs: 30000\n};\nconst SCRUBBED_STR = 'XXXXXX';\nconst defaultHttpAgent = new http.Agent(AGENT_DEFAULTS);\nconst defaultHttpsAgent = new https.Agent(AGENT_DEFAULTS);\nconst ChangesReader = require('./changesreader.js');\nconst MultiPartFactory = require('./multipart.js');\nfunction isEmpty(val) {\n  return val == null || !(Object.keys(val) || val).length;\n}\nfunction getCallback(opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  return {\n    opts,\n    callback\n  };\n}\n\n// feed this any number of arguements, it will return true if\n// any of them are missing (falsey)\nfunction missing() {\n  for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n  return params.some(param => !param);\n}\n\n// calls the supplied callback or if not supplied, returns a rejected promise\nfunction callbackOrRejectError(callback) {\n  let error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Error('Invalid parameters');\n  if (callback) {\n    return callback(error, null);\n  } else {\n    return Promise.reject(error);\n  }\n}\nmodule.exports = exports = function dbScope(cfg) {\n  let serverScope = {};\n  if (typeof cfg === 'string') {\n    cfg = {\n      url: cfg\n    };\n  }\n  assert.strictEqual(typeof cfg, 'object', 'You must specify the endpoint url when invoking this module');\n  assert.ok(/^https?:/.test(cfg.url), 'url is not valid');\n  cfg = Object.assign({}, cfg);\n  serverScope.config = cfg;\n  cfg.requestDefaults = cfg.requestDefaults || {};\n  const dummyLogger = () => {};\n  const log = typeof cfg.log === 'function' ? cfg.log : dummyLogger;\n  const parseUrl = 'parseUrl' in cfg ? cfg.parseUrl : true;\n  function maybeExtractDatabaseComponent() {\n    if (!parseUrl) {\n      return;\n    }\n    const path = new URL(cfg.url);\n    const pathArray = path.pathname.split('/').filter(function (e) {\n      return e;\n    });\n    const db = pathArray.pop();\n    const rootPath = path.pathname.replace(/\\/?$/, '/..');\n    if (db) {\n      cfg.url = urlResolveFix(cfg.url, rootPath).replace(/\\/?$/, '');\n      return db;\n    }\n  }\n  function scrubURL(str) {\n    if (str) {\n      str = str.replace(/\\/\\/(.*)@/, `//${SCRUBBED_STR}:${SCRUBBED_STR}@`);\n    }\n    return str;\n  }\n  function scrubRequest(req, cloned) {\n    // scrub credentials\n    req.url = scrubURL(req.url);\n    if (req.headers.cookie) {\n      req.headers.cookie = 'XXXXXXX';\n    }\n    if (req.auth) {\n      if (!cloned) {\n        req.auth = JSON.parse(JSON.stringify(req.auth)); // clone just auth if not already cloned\n      }\n\n      req.auth.username = SCRUBBED_STR;\n      req.auth.password = SCRUBBED_STR;\n    }\n  }\n  const responseHandler = function (response, req, opts, resolve, reject, callback) {\n    const statusCode = response.status || response.response && response.response.status || 500;\n    if (response.isAxiosError && response.response) {\n      response = response.response;\n    }\n    let body = response.data;\n    response.statusCode = statusCode;\n\n    // let parsed\n    const responseHeaders = Object.assign({\n      uri: scrubURL(req.url),\n      statusCode: statusCode\n    }, response.headers);\n    if (!response.status) {\n      log({\n        err: 'socket',\n        body: body,\n        headers: responseHeaders\n      });\n      if (reject) {\n        reject(new Error('error happened in your connection'));\n      }\n      if (callback) {\n        const returnError = {\n          message: 'error happened in your connection',\n          scope: 'socket',\n          errid: 'request'\n        };\n        callback(returnError);\n      }\n      return;\n    }\n    delete responseHeaders.server;\n    delete responseHeaders['content-length'];\n\n    /* if (opts.dontParse) {\n      parsed = body\n    } else {\n      try { parsed = JSON.parse(body) } catch (err) { parsed = body }\n    } */\n\n    if (statusCode >= 200 && statusCode < 400) {\n      log({\n        err: null,\n        body: body,\n        headers: responseHeaders\n      });\n      if (resolve) {\n        resolve(body);\n      }\n      if (callback) {\n        callback(null, body, responseHeaders);\n      }\n      return;\n    }\n\n    // cloudant stacktrace\n    if (typeof body === 'string') {\n      body = {\n        message: body\n      };\n    }\n    if (!body.message && (body.reason || body.error)) {\n      body.message = body.reason || body.error;\n    }\n\n    // fix cloudant issues where they give an erlang stacktrace as js\n    delete body.stack;\n\n    // scrub credentials\n    scrubRequest(req);\n    log({\n      err: 'couch',\n      body: body,\n      headers: responseHeaders\n    });\n    const message = body.message || 'couch returned ' + statusCode;\n    const errors = new Error(message);\n    errors.scope = 'couch';\n    errors.statusCode = statusCode;\n    errors.request = req;\n    errors.headers = responseHeaders;\n    errors.errid = 'non_200';\n    errors.name = 'Error';\n    errors.description = message;\n    // add any attributes from the HTTP response into the\n    // Error object (except message, which would overwrite\n    // the text message of the Error)\n    delete body.message;\n    Object.assign(errors, body);\n    if (reject) {\n      reject(errors);\n    }\n    if (callback) {\n      callback(errors);\n    }\n  };\n  const streamResponseHandler = function (response, req, stream) {\n    const statusCode = response.status || response.response && response.response.status || 500;\n    if (response.isAxiosError && response.response) {\n      response = response.response;\n    }\n    const message = response.statusText;\n    scrubRequest(req);\n    const responseHeaders = Object.assign({\n      uri: req.url,\n      statusCode: statusCode\n    }, response.headers);\n    const error = new Error(message);\n    error.scope = 'couch';\n    error.statusCode = statusCode;\n    error.request = req;\n    error.headers = responseHeaders;\n    error.errid = 'non_200';\n    error.name = 'Error';\n    error.description = message;\n    error.reason = message;\n    log({\n      err: 'couch',\n      body: message,\n      headers: responseHeaders\n    });\n    stream.emit('error', error);\n  };\n  function relax(opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {\n        path: ''\n      };\n    }\n    if (typeof opts === 'string') {\n      opts = {\n        path: opts\n      };\n    }\n    if (!opts) {\n      opts = {\n        path: ''\n      };\n      callback = null;\n    }\n    const qs = Object.assign({}, opts.qs);\n    const headers = {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': `${pkg.name}/${pkg.version} (Node.js ${process.version})`,\n      'Accept-Encoding': 'deflate, gzip'\n    };\n    const req = Object.assign({\n      method: opts.method || 'GET',\n      headers: headers,\n      uri: cfg.url\n    }, {\n      ...cfg.requestDefaults,\n      headers: Object.assign(headers, cfg.requestDefaults && cfg.requestDefaults.headers ? cfg.requestDefaults.headers : {})\n    });\n\n    // https://github.com/mikeal/request#requestjar\n    const isJar = opts.jar || cfg.jar || cfg.requestDefaults && cfg.requestDefaults.jar;\n    if (isJar) {\n      req.jar = cookieJar;\n      req.withCredentials = true;\n    }\n\n    // http://wiki.apache.org/couchdb/HTTP_database_API#Naming_and_Addressing\n    if (opts.db) {\n      req.uri = urlResolveFix(req.uri, encodeURIComponent(opts.db));\n    }\n    if (opts.multipart) {\n      // generate the multipart/related body, header and boundary to\n      // upload multiple binary attachments in one request\n      const mp = new MultiPartFactory(opts.multipart);\n      opts.contentType = mp.header;\n      req.body = mp.data;\n    }\n    req.headers = Object.assign(req.headers, opts.headers, cfg.defaultHeaders);\n    if (opts.path) {\n      req.uri += '/' + opts.path;\n    } else if (opts.doc) {\n      if (!/^_design|_local/.test(opts.doc)) {\n        // http://wiki.apache.org/couchdb/HTTP_Document_API#Naming.2FAddressing\n        req.uri += '/' + encodeURIComponent(opts.doc);\n      } else {\n        // http://wiki.apache.org/couchdb/HTTP_Document_API#Document_IDs\n        req.uri += '/' + opts.doc;\n      }\n\n      // http://wiki.apache.org/couchdb/HTTP_Document_API#Attachments\n      if (opts.att) {\n        req.uri += '/' + opts.att;\n      }\n    }\n\n    // prevent bugs where people set encoding when piping\n    if (opts.encoding !== undefined) {\n      req.encoding = opts.encoding;\n      delete req.headers['content-type'];\n      delete req.headers.accept;\n    }\n    if (opts.contentType) {\n      req.headers['content-type'] = opts.contentType;\n      delete req.headers.accept;\n    }\n    if (opts.accept) {\n      req.headers.accept = opts.accept;\n    }\n\n    // http://guide.couchdb.org/draft/security.html#cookies\n    if (cfg.cookie) {\n      req.headers['X-CouchDB-WWW-Authenticate'] = 'Cookie';\n      req.headers.cookie = cfg.cookie;\n    }\n\n    // http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.qs === 'object' && !isEmpty(opts.qs)) {\n      ['startkey', 'endkey', 'key', 'keys', 'start_key', 'end_key'].forEach(function (key) {\n        if (key in opts.qs) {\n          qs[key] = JSON.stringify(opts.qs[key]);\n        }\n      });\n      req.qs = qs;\n    }\n    if (opts.body) {\n      if (Buffer.isBuffer(opts.body) || opts.dontStringify) {\n        req.body = opts.body;\n      } else {\n        req.body = JSON.stringify(opts.body, function (key, value) {\n          // don't encode functions\n          if (typeof value === 'function') {\n            return value.toString();\n          } else {\n            return value;\n          }\n        });\n      }\n    }\n    if (opts.form) {\n      req.headers['content-type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n      req.body = querystring.stringify(opts.form).toString('utf8');\n    }\n\n    // ask request to render query string arrays as repeated values e.g.\n    // ?drilldown=[\"author\",\"Dickens\"]&drilldown=[\"publisher\",\"Penguin\"]\n    req.qsStringifyOptions = {\n      arrayFormat: 'repeat'\n    };\n    cfg.cookies = cookieJar.getCookiesSync(cfg.url);\n\n    // This where the HTTP request is made.\n    // Nano used to use the now-deprecated \"request\" library but now we're going to\n    // use axios, so let's modify the \"req\" object to suit axios\n    req.url = req.uri;\n    delete req.uri;\n    req.method = req.method.toLowerCase();\n    req.params = req.qs;\n    delete req.qs;\n    req.paramsSerializer = params => {\n      return querystring.stringify(params, {\n        arrayFormat: 'brackets'\n      });\n    };\n    req.data = req.body;\n    delete req.body;\n    req.maxRedirects = 0;\n    if (opts.stream) {\n      req.responseType = 'stream';\n    } else if (opts.dontParse) {\n      req.responseType = 'arraybuffer';\n    }\n\n    // scrub and log\n    const scrubbedReq = {\n      method: req.method,\n      headers: JSON.parse(JSON.stringify(req.headers)),\n      url: req.url\n    };\n    scrubRequest(scrubbedReq, true);\n    log(scrubbedReq);\n\n    // add http agents\n    req.httpAgent = cfg.requestDefaults.agent || defaultHttpAgent;\n    req.httpsAgent = cfg.requestDefaults.agent || defaultHttpsAgent;\n\n    // actually do the HTTP request\n    if (opts.stream) {\n      // return the Request object for streaming\n      const outStream = new stream.PassThrough();\n      axios(req).then(response => {\n        response.data.pipe(outStream);\n      }).catch(e => {\n        streamResponseHandler(e, req, outStream);\n      });\n      return outStream;\n    } else {\n      if (typeof callback === 'function') {\n        axios(req).then(response => {\n          responseHandler(response, req, opts, null, null, callback);\n        }).catch(e => {\n          responseHandler(e, req, opts, null, null, callback);\n        });\n      } else {\n        return new Promise((resolve, reject) => {\n          axios(req).then(response => {\n            responseHandler(response, req, opts, resolve, reject);\n          }).catch(e => {\n            responseHandler(e, req, opts, resolve, reject);\n          });\n        });\n      }\n    }\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/authn.html#cookie-authentication\n  function auth(username, password, callback) {\n    return relax({\n      method: 'POST',\n      db: '_session',\n      form: {\n        name: username,\n        password: password\n      }\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/authn.html#post--_session\n  function session(callback) {\n    return relax({\n      db: '_session'\n    }, callback);\n  }\n\n  // https://docs.couchdb.org/en/latest/api/server/common.html#api-server-root\n  function info(callback) {\n    return relax({\n      path: ''\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_db_updates\n  function updates(qs0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(qs0, callback0);\n    return relax({\n      db: '_db_updates',\n      qs: opts\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#put--db\n  function createDb(dbName, qs0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(qs0, callback0);\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n    return relax({\n      db: dbName,\n      method: 'PUT',\n      qs: opts\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#delete--db\n  function destroyDb(dbName, callback) {\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n    return relax({\n      db: dbName,\n      method: 'DELETE'\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#get--db\n  function getDb(dbName, callback) {\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n    return relax({\n      db: dbName\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_all_dbs\n  function listDbs(callback) {\n    return relax({\n      db: '_all_dbs'\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_all_dbs\n  function listDbsAsStream() {\n    return relax({\n      db: '_all_dbs',\n      stream: true\n    });\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/compact.html#post--db-_compact\n  function compactDb(dbName, ddoc, callback) {\n    if (typeof ddoc === 'function') {\n      callback = ddoc;\n      ddoc = null;\n    }\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n    return relax({\n      db: dbName,\n      doc: '_compact',\n      att: ddoc,\n      method: 'POST'\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/changes.html#get--db-_changes\n  function changesDb(dbName, qs0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(qs0, callback0);\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback);\n    }\n    return relax({\n      db: dbName,\n      path: '_changes',\n      qs: opts\n    }, callback);\n  }\n  function changesDbAsStream(dbName, opts) {\n    return relax({\n      db: dbName,\n      path: '_changes',\n      stream: true,\n      qs: opts\n    });\n  }\n  function _serializeAsUrl(db) {\n    if (typeof db === 'object' && db.config && db.config.url && db.config.db) {\n      return urlResolveFix(db.config.url, encodeURIComponent(db.config.db));\n    } else {\n      try {\n        // if it parses, return it\n        const parsed = new URL(db);\n        return parsed.toString();\n      } catch (e) {\n        // otherwise treat it as a database name\n        return urlResolveFix(cfg.url, encodeURIComponent(db));\n      }\n    }\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#post--_replicate\n  function replicateDb(source, target, opts0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(opts0, callback0);\n    if (missing(source, target)) {\n      return callbackOrRejectError(callback);\n    }\n\n    // _replicate\n    opts.source = _serializeAsUrl(source);\n    opts.target = _serializeAsUrl(target);\n    return relax({\n      db: '_replicate',\n      body: opts,\n      method: 'POST'\n    }, callback);\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#uuids\n  function uuids(count, callback) {\n    if (typeof count === 'function') {\n      callback = count;\n      count = 1;\n    }\n    count = count || 1;\n    return relax({\n      method: 'GET',\n      path: '_uuids',\n      qs: {\n        count: count\n      }\n    }, callback);\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function enableReplication(source, target, opts0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(opts0, callback0);\n    if (missing(source, target)) {\n      return callbackOrRejectError(callback);\n    }\n\n    // _replicator\n    opts.source = _serializeAsUrl(source);\n    opts.target = _serializeAsUrl(target);\n    return relax({\n      db: '_replicator',\n      body: opts,\n      method: 'POST'\n    }, callback);\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function queryReplication(id, opts0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(opts0, callback0);\n    if (missing(id)) {\n      return callbackOrRejectError(callback);\n    }\n    return relax({\n      db: '_replicator',\n      method: 'GET',\n      path: id,\n      qs: opts\n    }, callback);\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function disableReplication(id, rev, opts0, callback0) {\n    const {\n      opts,\n      callback\n    } = getCallback(opts0, callback0);\n    if (missing(id, rev)) {\n      return callbackOrRejectError(callback);\n    }\n    const req = {\n      db: '_replicator',\n      method: 'DELETE',\n      path: id,\n      qs: Object.assign(opts, {\n        rev: rev\n      })\n    };\n    return relax(req, callback);\n  }\n  function docModule(dbName) {\n    let docScope = {};\n    dbName = decodeURIComponent(dbName);\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#put--db-docid\n    // http://docs.couchdb.org/en/latest/api/database/common.html#post--db\n    function insertDoc(doc, qs0, callback0) {\n      const req = {\n        db: dbName,\n        body: doc,\n        method: 'POST'\n      };\n      let {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      if (typeof opts === 'string') {\n        opts = {\n          docName: opts\n        };\n      }\n      if (opts) {\n        if (opts.docName) {\n          req.doc = opts.docName;\n          req.method = 'PUT';\n          delete opts.docName;\n        }\n        req.qs = opts;\n      }\n      return relax(req, callback);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#delete--db-docid\n    function destroyDoc(docName, rev, callback) {\n      if (missing(docName)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        doc: docName,\n        method: 'DELETE',\n        qs: {\n          rev: rev\n        }\n      }, callback);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#get--db-docid\n    function getDoc(docName, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      if (missing(docName)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        doc: docName,\n        qs: opts\n      }, callback);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#head--db-docid\n    function headDoc(docName, callback) {\n      if (missing(docName)) {\n        return callbackOrRejectError(callback);\n      }\n      if (callback) {\n        relax({\n          db: dbName,\n          doc: docName,\n          method: 'HEAD',\n          qs: {}\n        }, callback);\n      } else {\n        // this function doesn't pass on the Promise from relax because it needs\n        // to return the headers when resolving the Promise\n        return new Promise(function (resolve, reject) {\n          relax({\n            db: dbName,\n            doc: docName,\n            method: 'HEAD',\n            qs: {}\n          }, function (err, body, headers) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(headers);\n            }\n          });\n        });\n      }\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#get--db-_all_docs\n    function listDoc(qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        qs: opts\n      }, callback);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#get--db-_all_docs\n    function listDocAsStream(opts) {\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        qs: opts,\n        stream: true\n      });\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_all_docs\n    function fetchDocs(docNames, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      opts.include_docs = true;\n      if (missing(docNames) || typeof docNames !== 'object' || !docNames.keys || !Array.isArray(docNames.keys) || docNames.keys.length === 0) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        method: 'POST',\n        qs: opts,\n        body: docNames\n      }, callback);\n    }\n    function fetchRevs(docNames, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      if (missing(docNames) || typeof docNames !== 'object' || !docNames.keys || !Array.isArray(docNames.keys) || docNames.keys.length === 0) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        method: 'POST',\n        qs: opts,\n        body: docNames\n      }, callback);\n    }\n    function view(ddoc, viewName, meta, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      if (missing(ddoc, viewName) && !meta.viewPath) {\n        return callbackOrRejectError(callback);\n      }\n      if (typeof meta.stream !== 'boolean') {\n        meta.stream = false;\n      }\n\n      // prevent mutation of the client qs object by using a clone\n      const qs1 = Object.assign({}, opts);\n      const viewPath = meta.viewPath || '_design/' + ddoc + '/_' + meta.type + '/' + viewName;\n      if (meta.type === 'search') {\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          body: qs1,\n          stream: meta.stream\n        }, callback);\n      } else if (qs1 && qs1.keys) {\n        const body = {\n          keys: qs1.keys\n        };\n        delete qs1.keys;\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          qs: qs1,\n          body: body,\n          stream: meta.stream\n        }, callback);\n      } else if (qs1 && qs1.queries) {\n        const body = {\n          queries: qs1.queries\n        };\n        delete qs1.queries;\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          qs: qs1,\n          body: body\n        }, callback);\n      } else {\n        const req = {\n          db: dbName,\n          method: meta.method || 'GET',\n          path: viewPath,\n          qs: qs1,\n          stream: meta.stream\n        };\n        if (meta.body) {\n          req.body = meta.body;\n        }\n        return relax(req, callback);\n      }\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/views.html#post--db-_design-ddoc-_view-view\n    function viewDocs(ddoc, viewName, qs, callback) {\n      return view(ddoc, viewName, {\n        type: 'view'\n      }, qs, callback);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/views.html#post--db-_design-ddoc-_view-view\n    function viewDocsAsStream(ddoc, viewName, qs) {\n      return view(ddoc, viewName, {\n        type: 'view',\n        stream: true\n      }, qs);\n    }\n\n    // cloudant\n    function viewSearch(ddoc, viewName, qs, callback) {\n      return view(ddoc, viewName, {\n        type: 'search'\n      }, qs, callback);\n    }\n\n    // cloudant\n    function viewSearchAsStream(ddoc, viewName, qs) {\n      return view(ddoc, viewName, {\n        type: 'search',\n        stream: true\n      }, qs);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/render.html#get--db-_design-ddoc-_show-func\n    function showDoc(ddoc, viewName, docName, qs, callback) {\n      if (missing(ddoc, viewName, docName)) {\n        return callbackOrRejectError(callback);\n      }\n      return view(ddoc, viewName + '/' + docName, {\n        type: 'show'\n      }, qs, callback);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/render.html#put--db-_design-ddoc-_update-func-docid\n    function updateWithHandler(ddoc, viewName, docName, body, callback) {\n      if (typeof body === 'function') {\n        callback = body;\n        body = undefined;\n      }\n      if (missing(ddoc, viewName, docName)) {\n        return callbackOrRejectError(callback);\n      }\n      return view(ddoc, viewName + '/' + encodeURIComponent(docName), {\n        type: 'update',\n        method: 'PUT',\n        body: body\n      }, callback);\n    }\n    function viewWithList(ddoc, viewName, listName, qs, callback) {\n      return view(ddoc, listName + '/' + viewName, {\n        type: 'list'\n      }, qs, callback);\n    }\n    function viewWithListAsStream(ddoc, viewName, listName, qs, callback) {\n      return view(ddoc, listName + '/' + viewName, {\n        type: 'list',\n        stream: true\n      }, qs, callback);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_bulksDoc\n    function bulksDoc(docs, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      return relax({\n        db: dbName,\n        path: '_bulk_docs',\n        body: docs,\n        method: 'POST',\n        qs: opts\n      }, callback);\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#creating-multiple-attachments\n    function insertMultipart(doc, attachments, qs, callback) {\n      if (typeof qs === 'string') {\n        qs = {\n          docName: qs\n        };\n      }\n      qs = qs || {};\n      const docName = qs.docName;\n      delete qs.docName;\n      if (missing(doc, attachments, docName)) {\n        return callbackOrRejectError(callback);\n      }\n      doc = Object.assign({\n        _attachments: {}\n      }, doc);\n      const multipart = [];\n      attachments.forEach(function (att) {\n        doc._attachments[att.name] = {\n          follows: true,\n          length: Buffer.isBuffer(att.data) ? att.data.length : Buffer.byteLength(att.data),\n          /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n          content_type: att.content_type\n        };\n        multipart.push(att);\n      });\n      multipart.unshift({\n        content_type: 'application/json',\n        data: JSON.stringify(doc),\n        name: 'document'\n      });\n      return relax({\n        db: dbName,\n        method: 'PUT',\n        contentType: 'multipart/related',\n        doc: docName,\n        qs: qs,\n        multipart: multipart\n      }, callback);\n    }\n    function getMultipart(docName, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      opts.attachments = true;\n      if (missing(docName)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        doc: docName,\n        encoding: null,\n        accept: 'multipart/related',\n        qs: opts\n      }, callback);\n    }\n    function insertAtt(docName, attName, att, contentType, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      if (missing(docName, attName, att, contentType)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        att: attName,\n        method: 'PUT',\n        contentType: contentType,\n        doc: docName,\n        qs: opts,\n        body: att,\n        dontStringify: true\n      }, callback);\n    }\n    function getAtt(docName, attName, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      if (missing(docName, attName)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        att: attName,\n        doc: docName,\n        qs: opts,\n        encoding: null,\n        dontParse: true\n      }, callback);\n    }\n    function getAttAsStream(docName, attName, opts) {\n      return relax({\n        db: dbName,\n        att: attName,\n        doc: docName,\n        qs: opts,\n        stream: true,\n        encoding: null,\n        dontParse: true\n      });\n    }\n    function destroyAtt(docName, attName, qs, callback) {\n      if (missing(docName, attName)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        att: attName,\n        method: 'DELETE',\n        doc: docName,\n        qs: qs\n      }, callback);\n    }\n    function find(query, callback) {\n      if (missing(query) || typeof query !== 'object') {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_find',\n        method: 'POST',\n        body: query\n      }, callback);\n    }\n    function findAsStream(query) {\n      return relax({\n        db: dbName,\n        path: '_find',\n        method: 'POST',\n        body: query,\n        stream: true\n      });\n    }\n    function createIndex(indexDef, callback) {\n      if (missing(indexDef) || typeof indexDef !== 'object') {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_index',\n        method: 'POST',\n        body: indexDef\n      }, callback);\n    }\n    function partitionInfo(partitionKey, callback) {\n      if (missing(partitionKey)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey\n      }, callback);\n    }\n    function partitionedList(partitionKey, qs0, callback0) {\n      const {\n        opts,\n        callback\n      } = getCallback(qs0, callback0);\n      if (missing(partitionKey)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey + '/_all_docs',\n        qs: opts\n      }, callback);\n    }\n    function partitionedListAsStream(partitionKey, qs) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey + '/_all_docs',\n        qs: qs,\n        stream: true\n      });\n    }\n    function partitionedFind(partition, query, callback) {\n      if (missing(partition, query) || typeof query !== 'object') {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_find',\n        method: 'POST',\n        body: query\n      }, callback);\n    }\n    function partitionedFindAsStream(partition, query) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_find',\n        method: 'POST',\n        body: query,\n        stream: true\n      });\n    }\n    function partitionedSearch(partition, ddoc, searchName, opts, callback) {\n      if (missing(partition, ddoc, searchName, opts) || typeof opts !== 'object') {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_search/' + searchName,\n        qs: opts\n      }, callback);\n    }\n    function partitionedSearchAsStream(partition, ddoc, searchName, opts) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_search/' + searchName,\n        qs: opts,\n        stream: true\n      });\n    }\n    function partitionedView(partition, ddoc, viewName, opts, callback) {\n      if (missing(partition, ddoc, viewName)) {\n        return callbackOrRejectError(callback);\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_view/' + viewName,\n        qs: opts\n      }, callback);\n    }\n    function partitionedViewAsStream(partition, ddoc, viewName, opts) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_view/' + viewName,\n        qs: opts,\n        stream: true\n      });\n    }\n\n    // db level exports\n    docScope = {\n      info: function (cb) {\n        return getDb(dbName, cb);\n      },\n      replicate: function (target, opts, cb) {\n        return replicateDb(dbName, target, opts, cb);\n      },\n      compact: function (cb) {\n        return compactDb(dbName, cb);\n      },\n      changes: function (qs, cb) {\n        return changesDb(dbName, qs, cb);\n      },\n      changesAsStream: function (qs) {\n        return changesDbAsStream(dbName, qs);\n      },\n      changesReader: new ChangesReader(dbName, relax),\n      auth: auth,\n      session: session,\n      insert: insertDoc,\n      get: getDoc,\n      head: headDoc,\n      destroy: destroyDoc,\n      bulk: bulksDoc,\n      list: listDoc,\n      listAsStream: listDocAsStream,\n      fetch: fetchDocs,\n      fetchRevs: fetchRevs,\n      config: {\n        url: cfg.url,\n        db: dbName\n      },\n      multipart: {\n        insert: insertMultipart,\n        get: getMultipart\n      },\n      attachment: {\n        insert: insertAtt,\n        get: getAtt,\n        getAsStream: getAttAsStream,\n        destroy: destroyAtt\n      },\n      show: showDoc,\n      atomic: updateWithHandler,\n      updateWithHandler: updateWithHandler,\n      baseView: view,\n      search: viewSearch,\n      searchAsStream: viewSearchAsStream,\n      view: viewDocs,\n      viewAsStream: viewDocsAsStream,\n      find: find,\n      findAsStream: findAsStream,\n      createIndex: createIndex,\n      viewWithList: viewWithList,\n      viewWithListAsStream: viewWithListAsStream,\n      server: serverScope,\n      replication: {\n        enable: function (target, opts, cb) {\n          return enableReplication(dbName, target, opts, cb);\n        },\n        disable: function (id, revision, opts, cb) {\n          return disableReplication(id, revision, opts, cb);\n        },\n        query: function (id, opts, cb) {\n          return queryReplication(id, opts, cb);\n        }\n      },\n      partitionInfo: partitionInfo,\n      partitionedList: partitionedList,\n      partitionedListAsStream: partitionedListAsStream,\n      partitionedFind: partitionedFind,\n      partitionedFindAsStream: partitionedFindAsStream,\n      partitionedSearch: partitionedSearch,\n      partitionedSearchAsStream: partitionedSearchAsStream,\n      partitionedView: partitionedView,\n      partitionedViewAsStream: partitionedViewAsStream\n    };\n    docScope.view.compact = function (ddoc, cb) {\n      return compactDb(dbName, ddoc, cb);\n    };\n    return docScope;\n  }\n\n  // server level exports\n  serverScope = Object.assign(serverScope, {\n    db: {\n      create: createDb,\n      get: getDb,\n      destroy: destroyDb,\n      list: listDbs,\n      listAsStream: listDbsAsStream,\n      use: docModule,\n      scope: docModule,\n      compact: compactDb,\n      replicate: replicateDb,\n      replication: {\n        enable: enableReplication,\n        disable: disableReplication,\n        query: queryReplication\n      },\n      changes: changesDb,\n      updates: updates\n    },\n    use: docModule,\n    scope: docModule,\n    request: relax,\n    relax: relax,\n    dinosaur: relax,\n    auth: auth,\n    session: session,\n    updates: updates,\n    uuids: uuids,\n    info: info\n  });\n  const db = maybeExtractDatabaseComponent();\n  return db ? docModule(db) : serverScope;\n};\n\n/*\n * and now an ascii dinosaur\n *              _\n *            / _) ROAR! i'm a vegan!\n *     .-^^^-/ /\n *  __/       /\n * /__.|_|-|_|\n *\n * thanks for visiting! come again!\n */\n\nfunction urlResolveFix(couchUrl, dbName) {\n  if (/[^/]$/.test(couchUrl)) {\n    couchUrl += '/';\n  }\n  return new URL(dbName, couchUrl).toString();\n}","map":{"version":3,"names":["URL","require","assert","querystring","axios","default","axiosCookieJarSupport","tough","cookieJar","CookieJar","stream","http","https","pkg","AGENT_DEFAULTS","keepAlive","maxSockets","keepAliveMsecs","SCRUBBED_STR","defaultHttpAgent","Agent","defaultHttpsAgent","ChangesReader","MultiPartFactory","isEmpty","val","Object","keys","length","getCallback","opts","callback","missing","_len","arguments","params","Array","_key","some","param","callbackOrRejectError","error","undefined","Error","Promise","reject","module","exports","dbScope","cfg","serverScope","url","strictEqual","ok","test","assign","config","requestDefaults","dummyLogger","log","parseUrl","maybeExtractDatabaseComponent","path","pathArray","pathname","split","filter","e","db","pop","rootPath","replace","urlResolveFix","scrubURL","str","scrubRequest","req","cloned","headers","cookie","auth","JSON","parse","stringify","username","password","responseHandler","response","resolve","statusCode","status","isAxiosError","body","data","responseHeaders","uri","err","returnError","message","scope","errid","server","reason","stack","errors","request","name","description","streamResponseHandler","statusText","emit","relax","qs","accept","version","process","method","isJar","jar","withCredentials","encodeURIComponent","multipart","mp","contentType","header","defaultHeaders","doc","att","encoding","forEach","key","Buffer","isBuffer","dontStringify","value","toString","form","qsStringifyOptions","arrayFormat","cookies","getCookiesSync","toLowerCase","paramsSerializer","maxRedirects","responseType","dontParse","scrubbedReq","httpAgent","agent","httpsAgent","outStream","PassThrough","then","pipe","catch","session","info","updates","qs0","callback0","createDb","dbName","destroyDb","getDb","listDbs","listDbsAsStream","compactDb","ddoc","changesDb","changesDbAsStream","_serializeAsUrl","parsed","replicateDb","source","target","opts0","uuids","count","enableReplication","queryReplication","id","disableReplication","rev","docModule","docScope","decodeURIComponent","insertDoc","docName","destroyDoc","getDoc","headDoc","listDoc","listDocAsStream","fetchDocs","docNames","include_docs","isArray","fetchRevs","view","viewName","meta","viewPath","qs1","type","queries","viewDocs","viewDocsAsStream","viewSearch","viewSearchAsStream","showDoc","updateWithHandler","viewWithList","listName","viewWithListAsStream","bulksDoc","docs","insertMultipart","attachments","_attachments","follows","byteLength","content_type","push","unshift","getMultipart","insertAtt","attName","getAtt","getAttAsStream","destroyAtt","find","query","findAsStream","createIndex","indexDef","partitionInfo","partitionKey","partitionedList","partitionedListAsStream","partitionedFind","partition","partitionedFindAsStream","partitionedSearch","searchName","partitionedSearchAsStream","partitionedView","partitionedViewAsStream","cb","replicate","compact","changes","changesAsStream","changesReader","insert","get","head","destroy","bulk","list","listAsStream","fetch","attachment","getAsStream","show","atomic","baseView","search","searchAsStream","viewAsStream","replication","enable","disable","revision","create","use","dinosaur","couchUrl"],"sources":["/home/deepakraj/Desktop/Ticket-ADDA/ticketadda/client/node_modules/nano/lib/nano.js"],"sourcesContent":["// Licensed under the Apache License, Version 2.0 (the 'License'); you may not\n// use this file except in compliance with the License. You may obtain a copy of\n// the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations under\n// the License.\n\nconst { URL } = require('url')\nconst assert = require('assert')\nconst querystring = require('qs')\nconst axios = require('axios').default\nconst axiosCookieJarSupport = require('axios-cookiejar-support').default\nconst tough = require('tough-cookie')\naxiosCookieJarSupport(axios)\nconst cookieJar = new tough.CookieJar()\nconst stream = require('stream')\nconst http = require('http')\nconst https = require('https')\nconst pkg = require('../package.json')\nconst AGENT_DEFAULTS = { keepAlive: true, maxSockets: 50, keepAliveMsecs: 30000 }\nconst SCRUBBED_STR = 'XXXXXX'\nconst defaultHttpAgent = new http.Agent(AGENT_DEFAULTS)\nconst defaultHttpsAgent = new https.Agent(AGENT_DEFAULTS)\nconst ChangesReader = require('./changesreader.js')\nconst MultiPartFactory = require('./multipart.js')\n\nfunction isEmpty (val) {\n  return val == null || !(Object.keys(val) || val).length\n}\n\nfunction getCallback (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts\n    opts = {}\n  }\n  opts = opts || {}\n  return {\n    opts,\n    callback\n  }\n}\n\n// feed this any number of arguements, it will return true if\n// any of them are missing (falsey)\nfunction missing (...params) {\n  return params.some(param => !param)\n}\n\n// calls the supplied callback or if not supplied, returns a rejected promise\nfunction callbackOrRejectError (callback, error = new Error('Invalid parameters')) {\n  if (callback) {\n    return callback(error, null)\n  } else {\n    return Promise.reject(error)\n  }\n}\n\nmodule.exports = exports = function dbScope (cfg) {\n  let serverScope = {}\n\n  if (typeof cfg === 'string') {\n    cfg = { url: cfg }\n  }\n\n  assert.strictEqual(typeof cfg, 'object',\n    'You must specify the endpoint url when invoking this module')\n  assert.ok(/^https?:/.test(cfg.url), 'url is not valid')\n\n  cfg = Object.assign({}, cfg)\n\n  serverScope.config = cfg\n  cfg.requestDefaults = cfg.requestDefaults || {}\n\n  const dummyLogger = () => {}\n  const log = typeof cfg.log === 'function' ? cfg.log : dummyLogger\n  const parseUrl = 'parseUrl' in cfg ? cfg.parseUrl : true\n\n  function maybeExtractDatabaseComponent () {\n    if (!parseUrl) {\n      return\n    }\n\n    const path = new URL(cfg.url)\n    const pathArray = path.pathname.split('/').filter(function (e) { return e })\n    const db = pathArray.pop()\n    const rootPath = path.pathname.replace(/\\/?$/, '/..')\n\n    if (db) {\n      cfg.url = urlResolveFix(cfg.url, rootPath).replace(/\\/?$/, '')\n      return db\n    }\n  }\n\n  function scrubURL (str) {\n    if (str) {\n      str = str.replace(/\\/\\/(.*)@/, `//${SCRUBBED_STR}:${SCRUBBED_STR}@`)\n    }\n    return str\n  }\n\n  function scrubRequest (req, cloned) {\n    // scrub credentials\n    req.url = scrubURL(req.url)\n    if (req.headers.cookie) {\n      req.headers.cookie = 'XXXXXXX'\n    }\n    if (req.auth) {\n      if (!cloned) {\n        req.auth = JSON.parse(JSON.stringify(req.auth)) // clone just auth if not already cloned\n      }\n      req.auth.username = SCRUBBED_STR\n      req.auth.password = SCRUBBED_STR\n    }\n  }\n\n  const responseHandler = function (response, req, opts, resolve, reject, callback) {\n    const statusCode = response.status || (response.response && response.response.status) || 500\n    if (response.isAxiosError && response.response) {\n      response = response.response\n    }\n    let body = response.data\n    response.statusCode = statusCode\n\n    // let parsed\n    const responseHeaders = Object.assign({\n      uri: scrubURL(req.url),\n      statusCode: statusCode\n    }, response.headers)\n    if (!response.status) {\n      log({ err: 'socket', body: body, headers: responseHeaders })\n      if (reject) {\n        reject(new Error('error happened in your connection'))\n      }\n      if (callback) {\n        const returnError = {\n          message: 'error happened in your connection',\n          scope: 'socket',\n          errid: 'request'\n        }\n        callback(returnError)\n      }\n      return\n    }\n\n    delete responseHeaders.server\n    delete responseHeaders['content-length']\n\n    /* if (opts.dontParse) {\n      parsed = body\n    } else {\n      try { parsed = JSON.parse(body) } catch (err) { parsed = body }\n    } */\n\n    if (statusCode >= 200 && statusCode < 400) {\n      log({ err: null, body: body, headers: responseHeaders })\n      if (resolve) {\n        resolve(body)\n      }\n      if (callback) {\n        callback(null, body, responseHeaders)\n      }\n      return\n    }\n\n    // cloudant stacktrace\n    if (typeof body === 'string') {\n      body = { message: body }\n    }\n\n    if (!body.message && (body.reason || body.error)) {\n      body.message = (body.reason || body.error)\n    }\n\n    // fix cloudant issues where they give an erlang stacktrace as js\n    delete body.stack\n\n    // scrub credentials\n    scrubRequest(req)\n\n    log({ err: 'couch', body: body, headers: responseHeaders })\n\n    const message = body.message || 'couch returned ' + statusCode\n    const errors = new Error(message)\n    errors.scope = 'couch'\n    errors.statusCode = statusCode\n    errors.request = req\n    errors.headers = responseHeaders\n    errors.errid = 'non_200'\n    errors.name = 'Error'\n    errors.description = message\n    // add any attributes from the HTTP response into the\n    // Error object (except message, which would overwrite\n    // the text message of the Error)\n    delete body.message\n    Object.assign(errors, body)\n\n    if (reject) {\n      reject(errors)\n    }\n    if (callback) {\n      callback(errors)\n    }\n  }\n\n  const streamResponseHandler = function (response, req, stream) {\n    const statusCode = response.status || (response.response && response.response.status) || 500\n    if (response.isAxiosError && response.response) {\n      response = response.response\n    }\n    const message = response.statusText\n\n    scrubRequest(req)\n\n    const responseHeaders = Object.assign({\n      uri: req.url,\n      statusCode: statusCode\n    }, response.headers)\n\n    const error = new Error(message)\n    error.scope = 'couch'\n    error.statusCode = statusCode\n    error.request = req\n    error.headers = responseHeaders\n    error.errid = 'non_200'\n    error.name = 'Error'\n    error.description = message\n    error.reason = message\n\n    log({ err: 'couch', body: message, headers: responseHeaders })\n\n    stream.emit('error', error)\n  }\n\n  function relax (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts\n      opts = { path: '' }\n    }\n\n    if (typeof opts === 'string') {\n      opts = { path: opts }\n    }\n\n    if (!opts) {\n      opts = { path: '' }\n      callback = null\n    }\n\n    const qs = Object.assign({}, opts.qs)\n\n    const headers = {\n      'content-type': 'application/json',\n      accept: 'application/json',\n      'user-agent': `${pkg.name}/${pkg.version} (Node.js ${process.version})`,\n      'Accept-Encoding': 'deflate, gzip'\n    }\n\n    const req = Object.assign({\n      method: (opts.method || 'GET'),\n      headers: headers,\n      uri: cfg.url\n    }, {\n      ...cfg.requestDefaults,\n      headers: Object.assign(headers, cfg.requestDefaults && cfg.requestDefaults.headers ? cfg.requestDefaults.headers : {})\n    })\n\n    // https://github.com/mikeal/request#requestjar\n    const isJar = opts.jar || cfg.jar || (cfg.requestDefaults && cfg.requestDefaults.jar)\n\n    if (isJar) {\n      req.jar = cookieJar\n      req.withCredentials = true\n    }\n\n    // http://wiki.apache.org/couchdb/HTTP_database_API#Naming_and_Addressing\n    if (opts.db) {\n      req.uri = urlResolveFix(req.uri, encodeURIComponent(opts.db))\n    }\n\n    if (opts.multipart) {\n      // generate the multipart/related body, header and boundary to\n      // upload multiple binary attachments in one request\n      const mp = new MultiPartFactory(opts.multipart)\n      opts.contentType = mp.header\n      req.body = mp.data\n    }\n\n    req.headers = Object.assign(req.headers, opts.headers, cfg.defaultHeaders)\n\n    if (opts.path) {\n      req.uri += '/' + opts.path\n    } else if (opts.doc) {\n      if (!/^_design|_local/.test(opts.doc)) {\n        // http://wiki.apache.org/couchdb/HTTP_Document_API#Naming.2FAddressing\n        req.uri += '/' + encodeURIComponent(opts.doc)\n      } else {\n        // http://wiki.apache.org/couchdb/HTTP_Document_API#Document_IDs\n        req.uri += '/' + opts.doc\n      }\n\n      // http://wiki.apache.org/couchdb/HTTP_Document_API#Attachments\n      if (opts.att) {\n        req.uri += '/' + opts.att\n      }\n    }\n\n    // prevent bugs where people set encoding when piping\n    if (opts.encoding !== undefined) {\n      req.encoding = opts.encoding\n      delete req.headers['content-type']\n      delete req.headers.accept\n    }\n\n    if (opts.contentType) {\n      req.headers['content-type'] = opts.contentType\n      delete req.headers.accept\n    }\n\n    if (opts.accept) {\n      req.headers.accept = opts.accept\n    }\n\n    // http://guide.couchdb.org/draft/security.html#cookies\n    if (cfg.cookie) {\n      req.headers['X-CouchDB-WWW-Authenticate'] = 'Cookie'\n      req.headers.cookie = cfg.cookie\n    }\n\n    // http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.qs === 'object' && !isEmpty(opts.qs)) {\n      ['startkey', 'endkey', 'key', 'keys', 'start_key', 'end_key'].forEach(function (key) {\n        if (key in opts.qs) {\n          qs[key] = JSON.stringify(opts.qs[key])\n        }\n      })\n      req.qs = qs\n    }\n\n    if (opts.body) {\n      if (Buffer.isBuffer(opts.body) || opts.dontStringify) {\n        req.body = opts.body\n      } else {\n        req.body = JSON.stringify(opts.body, function (key, value) {\n          // don't encode functions\n          if (typeof (value) === 'function') {\n            return value.toString()\n          } else {\n            return value\n          }\n        })\n      }\n    }\n\n    if (opts.form) {\n      req.headers['content-type'] =\n        'application/x-www-form-urlencoded; charset=utf-8'\n      req.body = querystring.stringify(opts.form).toString('utf8')\n    }\n\n    // ask request to render query string arrays as repeated values e.g.\n    // ?drilldown=[\"author\",\"Dickens\"]&drilldown=[\"publisher\",\"Penguin\"]\n    req.qsStringifyOptions = { arrayFormat: 'repeat' }\n\n    cfg.cookies = cookieJar.getCookiesSync(cfg.url)\n\n    // This where the HTTP request is made.\n    // Nano used to use the now-deprecated \"request\" library but now we're going to\n    // use axios, so let's modify the \"req\" object to suit axios\n    req.url = req.uri\n    delete req.uri\n    req.method = req.method.toLowerCase()\n    req.params = req.qs\n    delete req.qs\n    req.paramsSerializer = (params) => {\n      return querystring.stringify(params, { arrayFormat: 'brackets' })\n    }\n    req.data = req.body\n    delete req.body\n    req.maxRedirects = 0\n    if (opts.stream) {\n      req.responseType = 'stream'\n    } else if (opts.dontParse) {\n      req.responseType = 'arraybuffer'\n    }\n\n    // scrub and log\n    const scrubbedReq = {\n      method: req.method,\n      headers: JSON.parse(JSON.stringify(req.headers)),\n      url: req.url\n    }\n    scrubRequest(scrubbedReq, true)\n    log(scrubbedReq)\n\n    // add http agents\n    req.httpAgent = cfg.requestDefaults.agent || defaultHttpAgent\n    req.httpsAgent = cfg.requestDefaults.agent || defaultHttpsAgent\n\n    // actually do the HTTP request\n    if (opts.stream) {\n      // return the Request object for streaming\n      const outStream = new stream.PassThrough()\n      axios(req)\n        .then((response) => {\n          response.data.pipe(outStream)\n        }).catch(e => {\n          streamResponseHandler(e, req, outStream)\n        })\n      return outStream\n    } else {\n      if (typeof callback === 'function') {\n        axios(req).then((response) => {\n          responseHandler(response, req, opts, null, null, callback)\n        }).catch((e) => {\n          responseHandler(e, req, opts, null, null, callback)\n        })\n      } else {\n        return new Promise((resolve, reject) => {\n          axios(req).then((response) => {\n            responseHandler(response, req, opts, resolve, reject)\n          }).catch((e) => {\n            responseHandler(e, req, opts, resolve, reject)\n          })\n        })\n      }\n    }\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/authn.html#cookie-authentication\n  function auth (username, password, callback) {\n    return relax({\n      method: 'POST',\n      db: '_session',\n      form: {\n        name: username,\n        password: password\n      }\n    }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/authn.html#post--_session\n  function session (callback) {\n    return relax({ db: '_session' }, callback)\n  }\n\n  // https://docs.couchdb.org/en/latest/api/server/common.html#api-server-root\n  function info (callback) {\n    return relax({ path: '' }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_db_updates\n  function updates (qs0, callback0) {\n    const { opts, callback } = getCallback(qs0, callback0)\n    return relax({\n      db: '_db_updates',\n      qs: opts\n    }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#put--db\n  function createDb (dbName, qs0, callback0) {\n    const { opts, callback } = getCallback(qs0, callback0)\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: dbName, method: 'PUT', qs: opts }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#delete--db\n  function destroyDb (dbName, callback) {\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: dbName, method: 'DELETE' }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/common.html#get--db\n  function getDb (dbName, callback) {\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: dbName }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_all_dbs\n  function listDbs (callback) {\n    return relax({ db: '_all_dbs' }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#get--_all_dbs\n  function listDbsAsStream () {\n    return relax({ db: '_all_dbs', stream: true })\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/compact.html#post--db-_compact\n  function compactDb (dbName, ddoc, callback) {\n    if (typeof ddoc === 'function') {\n      callback = ddoc\n      ddoc = null\n    }\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({\n      db: dbName,\n      doc: '_compact',\n      att: ddoc,\n      method: 'POST'\n    }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/database/changes.html#get--db-_changes\n  function changesDb (dbName, qs0, callback0) {\n    const { opts, callback } = getCallback(qs0, callback0)\n    if (missing(dbName)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: dbName, path: '_changes', qs: opts }, callback)\n  }\n\n  function changesDbAsStream (dbName, opts) {\n    return relax({ db: dbName, path: '_changes', stream: true, qs: opts })\n  }\n\n  function _serializeAsUrl (db) {\n    if (typeof db === 'object' && db.config && db.config.url && db.config.db) {\n      return urlResolveFix(db.config.url, encodeURIComponent(db.config.db))\n    } else {\n      try {\n        // if it parses, return it\n        const parsed = new URL(db)\n        return parsed.toString()\n      } catch (e) {\n        // otherwise treat it as a database name\n        return urlResolveFix(cfg.url, encodeURIComponent(db))\n      }\n    }\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#post--_replicate\n  function replicateDb (source, target, opts0, callback0) {\n    const { opts, callback } = getCallback(opts0, callback0)\n\n    if (missing(source, target)) {\n      return callbackOrRejectError(callback)\n    }\n\n    // _replicate\n    opts.source = _serializeAsUrl(source)\n    opts.target = _serializeAsUrl(target)\n\n    return relax({ db: '_replicate', body: opts, method: 'POST' }, callback)\n  }\n\n  // http://docs.couchdb.org/en/latest/api/server/common.html#uuids\n  function uuids (count, callback) {\n    if (typeof count === 'function') {\n      callback = count\n      count = 1\n    }\n    count = count || 1\n    return relax({ method: 'GET', path: '_uuids', qs: { count: count } }, callback)\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function enableReplication (source, target, opts0, callback0) {\n    const { opts, callback } = getCallback(opts0, callback0)\n\n    if (missing(source, target)) {\n      return callbackOrRejectError(callback)\n    }\n\n    // _replicator\n    opts.source = _serializeAsUrl(source)\n    opts.target = _serializeAsUrl(target)\n\n    return relax({ db: '_replicator', body: opts, method: 'POST' }, callback)\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function queryReplication (id, opts0, callback0) {\n    const { opts, callback } = getCallback(opts0, callback0)\n    if (missing(id)) {\n      return callbackOrRejectError(callback)\n    }\n    return relax({ db: '_replicator', method: 'GET', path: id, qs: opts }, callback)\n  }\n\n  // http://guide.couchdb.org/draft/replication.html\n  function disableReplication (id, rev, opts0, callback0) {\n    const { opts, callback } = getCallback(opts0, callback0)\n    if (missing(id, rev)) {\n      return callbackOrRejectError(callback)\n    }\n    const req = {\n      db: '_replicator',\n      method: 'DELETE',\n      path: id,\n      qs: Object.assign(opts, { rev: rev })\n    }\n    return relax(req, callback)\n  }\n\n  function docModule (dbName) {\n    let docScope = {}\n    dbName = decodeURIComponent(dbName)\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#put--db-docid\n    // http://docs.couchdb.org/en/latest/api/database/common.html#post--db\n    function insertDoc (doc, qs0, callback0) {\n      const req = { db: dbName, body: doc, method: 'POST' }\n\n      let { opts, callback } = getCallback(qs0, callback0)\n\n      if (typeof opts === 'string') {\n        opts = { docName: opts }\n      }\n\n      if (opts) {\n        if (opts.docName) {\n          req.doc = opts.docName\n          req.method = 'PUT'\n          delete opts.docName\n        }\n        req.qs = opts\n      }\n\n      return relax(req, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#delete--db-docid\n    function destroyDoc (docName, rev, callback) {\n      if (missing(docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        doc: docName,\n        method: 'DELETE',\n        qs: { rev: rev }\n      }, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#get--db-docid\n    function getDoc (docName, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n\n      if (missing(docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({ db: dbName, doc: docName, qs: opts }, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#head--db-docid\n    function headDoc (docName, callback) {\n      if (missing(docName)) {\n        return callbackOrRejectError(callback)\n      }\n      if (callback) {\n        relax({\n          db: dbName,\n          doc: docName,\n          method: 'HEAD',\n          qs: {}\n        }, callback)\n      } else {\n        // this function doesn't pass on the Promise from relax because it needs\n        // to return the headers when resolving the Promise\n        return new Promise(function (resolve, reject) {\n          relax({\n            db: dbName,\n            doc: docName,\n            method: 'HEAD',\n            qs: {}\n          }, function (err, body, headers) {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(headers)\n            }\n          })\n        })\n      }\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#get--db-_all_docs\n    function listDoc (qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      return relax({ db: dbName, path: '_all_docs', qs: opts }, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#get--db-_all_docs\n    function listDocAsStream (opts) {\n      return relax({ db: dbName, path: '_all_docs', qs: opts, stream: true })\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_all_docs\n    function fetchDocs (docNames, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      opts.include_docs = true\n\n      if (missing(docNames) || typeof docNames !== 'object' ||\n          !docNames.keys || !Array.isArray(docNames.keys) ||\n          docNames.keys.length === 0) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        method: 'POST',\n        qs: opts,\n        body: docNames\n      }, callback)\n    }\n\n    function fetchRevs (docNames, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n\n      if (missing(docNames) || typeof docNames !== 'object' ||\n          !docNames.keys || !Array.isArray(docNames.keys) ||\n          docNames.keys.length === 0) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_all_docs',\n        method: 'POST',\n        qs: opts,\n        body: docNames\n      }, callback)\n    }\n\n    function view (ddoc, viewName, meta, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n\n      if (missing(ddoc, viewName) && !meta.viewPath) {\n        return callbackOrRejectError(callback)\n      }\n\n      if (typeof meta.stream !== 'boolean') {\n        meta.stream = false\n      }\n\n      // prevent mutation of the client qs object by using a clone\n      const qs1 = Object.assign({}, opts)\n\n      const viewPath = meta.viewPath || '_design/' + ddoc + '/_' + meta.type +\n            '/' + viewName\n\n      if (meta.type === 'search') {\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          body: qs1,\n          stream: meta.stream\n        }, callback)\n      } else if (qs1 && qs1.keys) {\n        const body = { keys: qs1.keys }\n        delete qs1.keys\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          qs: qs1,\n          body: body,\n          stream: meta.stream\n        }, callback)\n      } else if (qs1 && qs1.queries) {\n        const body = { queries: qs1.queries }\n        delete qs1.queries\n        return relax({\n          db: dbName,\n          path: viewPath,\n          method: 'POST',\n          qs: qs1,\n          body: body\n        }, callback)\n      } else {\n        const req = {\n          db: dbName,\n          method: meta.method || 'GET',\n          path: viewPath,\n          qs: qs1,\n          stream: meta.stream\n        }\n\n        if (meta.body) {\n          req.body = meta.body\n        }\n\n        return relax(req, callback)\n      }\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/views.html#post--db-_design-ddoc-_view-view\n    function viewDocs (ddoc, viewName, qs, callback) {\n      return view(ddoc, viewName, { type: 'view' }, qs, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/views.html#post--db-_design-ddoc-_view-view\n    function viewDocsAsStream (ddoc, viewName, qs) {\n      return view(ddoc, viewName, { type: 'view', stream: true }, qs)\n    }\n\n    // cloudant\n    function viewSearch (ddoc, viewName, qs, callback) {\n      return view(ddoc, viewName, { type: 'search' }, qs, callback)\n    }\n\n    // cloudant\n    function viewSearchAsStream (ddoc, viewName, qs) {\n      return view(ddoc, viewName, { type: 'search', stream: true }, qs)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/render.html#get--db-_design-ddoc-_show-func\n    function showDoc (ddoc, viewName, docName, qs, callback) {\n      if (missing(ddoc, viewName, docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return view(ddoc, viewName + '/' + docName, { type: 'show' }, qs, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/ddoc/render.html#put--db-_design-ddoc-_update-func-docid\n    function updateWithHandler (ddoc, viewName, docName, body, callback) {\n      if (typeof body === 'function') {\n        callback = body\n        body = undefined\n      }\n      if (missing(ddoc, viewName, docName)) {\n        return callbackOrRejectError(callback)\n      }\n      return view(ddoc, viewName + '/' + encodeURIComponent(docName), {\n        type: 'update',\n        method: 'PUT',\n        body: body\n      }, callback)\n    }\n\n    function viewWithList (ddoc, viewName, listName, qs, callback) {\n      return view(ddoc, listName + '/' + viewName, {\n        type: 'list'\n      }, qs, callback)\n    }\n\n    function viewWithListAsStream (ddoc, viewName, listName, qs, callback) {\n      return view(ddoc, listName + '/' + viewName, {\n        type: 'list', stream: true\n      }, qs, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/database/bulk-api.html#post--db-_bulksDoc\n    function bulksDoc (docs, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      return relax({\n        db: dbName,\n        path: '_bulk_docs',\n        body: docs,\n        method: 'POST',\n        qs: opts\n      }, callback)\n    }\n\n    // http://docs.couchdb.org/en/latest/api/document/common.html#creating-multiple-attachments\n    function insertMultipart (doc, attachments, qs, callback) {\n      if (typeof qs === 'string') {\n        qs = { docName: qs }\n      }\n      qs = qs || {}\n\n      const docName = qs.docName\n      delete qs.docName\n\n      if (missing(doc, attachments, docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      doc = Object.assign({ _attachments: {} }, doc)\n\n      const multipart = []\n\n      attachments.forEach(function (att) {\n        doc._attachments[att.name] = {\n          follows: true,\n          length: Buffer.isBuffer(att.data) ? att.data.length : Buffer.byteLength(att.data),\n          /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n          content_type: att.content_type\n        }\n        multipart.push(att)\n      })\n\n      multipart.unshift({\n        content_type: 'application/json',\n        data: JSON.stringify(doc),\n        name: 'document'\n      })\n\n      return relax({\n        db: dbName,\n        method: 'PUT',\n        contentType: 'multipart/related',\n        doc: docName,\n        qs: qs,\n        multipart: multipart\n      }, callback)\n    }\n\n    function getMultipart (docName, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      opts.attachments = true\n\n      if (missing(docName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        doc: docName,\n        encoding: null,\n        accept: 'multipart/related',\n        qs: opts\n      }, callback)\n    }\n\n    function insertAtt (docName, attName, att, contentType, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      if (missing(docName, attName, att, contentType)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        method: 'PUT',\n        contentType: contentType,\n        doc: docName,\n        qs: opts,\n        body: att,\n        dontStringify: true\n      }, callback)\n    }\n\n    function getAtt (docName, attName, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n\n      if (missing(docName, attName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        doc: docName,\n        qs: opts,\n        encoding: null,\n        dontParse: true\n      }, callback)\n    }\n\n    function getAttAsStream (docName, attName, opts) {\n      return relax({\n        db: dbName,\n        att: attName,\n        doc: docName,\n        qs: opts,\n        stream: true,\n        encoding: null,\n        dontParse: true\n      })\n    }\n\n    function destroyAtt (docName, attName, qs, callback) {\n      if (missing(docName, attName)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        att: attName,\n        method: 'DELETE',\n        doc: docName,\n        qs: qs\n      }, callback)\n    }\n\n    function find (query, callback) {\n      if (missing(query) || typeof query !== 'object') {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_find',\n        method: 'POST',\n        body: query\n      }, callback)\n    }\n\n    function findAsStream (query) {\n      return relax({\n        db: dbName,\n        path: '_find',\n        method: 'POST',\n        body: query,\n        stream: true\n      })\n    }\n\n    function createIndex (indexDef, callback) {\n      if (missing(indexDef) || typeof indexDef !== 'object') {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_index',\n        method: 'POST',\n        body: indexDef\n      }, callback)\n    }\n\n    function partitionInfo (partitionKey, callback) {\n      if (missing(partitionKey)) {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey\n      }, callback)\n    }\n\n    function partitionedList (partitionKey, qs0, callback0) {\n      const { opts, callback } = getCallback(qs0, callback0)\n      if (missing(partitionKey)) {\n        return callbackOrRejectError(callback)\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey + '/_all_docs',\n        qs: opts\n      }, callback)\n    }\n\n    function partitionedListAsStream (partitionKey, qs) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partitionKey + '/_all_docs',\n        qs: qs,\n        stream: true\n      })\n    }\n\n    function partitionedFind (partition, query, callback) {\n      if (missing(partition, query) || typeof query !== 'object') {\n        return callbackOrRejectError(callback)\n      }\n\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_find',\n        method: 'POST',\n        body: query\n      }, callback)\n    }\n\n    function partitionedFindAsStream (partition, query) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_find',\n        method: 'POST',\n        body: query,\n        stream: true\n      })\n    }\n\n    function partitionedSearch (partition, ddoc, searchName, opts, callback) {\n      if (missing(partition, ddoc, searchName, opts) || typeof opts !== 'object') {\n        return callbackOrRejectError(callback)\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_search/' + searchName,\n        qs: opts\n      }, callback)\n    }\n\n    function partitionedSearchAsStream (partition, ddoc, searchName, opts) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_search/' + searchName,\n        qs: opts,\n        stream: true\n      })\n    }\n\n    function partitionedView (partition, ddoc, viewName, opts, callback) {\n      if (missing(partition, ddoc, viewName)) {\n        return callbackOrRejectError(callback)\n      }\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_view/' + viewName,\n        qs: opts\n      }, callback)\n    }\n\n    function partitionedViewAsStream (partition, ddoc, viewName, opts) {\n      return relax({\n        db: dbName,\n        path: '_partition/' + partition + '/_design/' + ddoc + '/_view/' + viewName,\n        qs: opts,\n        stream: true\n      })\n    }\n\n    // db level exports\n    docScope = {\n      info: function (cb) {\n        return getDb(dbName, cb)\n      },\n      replicate: function (target, opts, cb) {\n        return replicateDb(dbName, target, opts, cb)\n      },\n      compact: function (cb) {\n        return compactDb(dbName, cb)\n      },\n      changes: function (qs, cb) {\n        return changesDb(dbName, qs, cb)\n      },\n      changesAsStream: function (qs) {\n        return changesDbAsStream(dbName, qs)\n      },\n      changesReader: new ChangesReader(dbName, relax),\n      auth: auth,\n      session: session,\n      insert: insertDoc,\n      get: getDoc,\n      head: headDoc,\n      destroy: destroyDoc,\n      bulk: bulksDoc,\n      list: listDoc,\n      listAsStream: listDocAsStream,\n      fetch: fetchDocs,\n      fetchRevs: fetchRevs,\n      config: { url: cfg.url, db: dbName },\n      multipart: {\n        insert: insertMultipart,\n        get: getMultipart\n      },\n      attachment: {\n        insert: insertAtt,\n        get: getAtt,\n        getAsStream: getAttAsStream,\n        destroy: destroyAtt\n      },\n      show: showDoc,\n      atomic: updateWithHandler,\n      updateWithHandler: updateWithHandler,\n      baseView: view,\n      search: viewSearch,\n      searchAsStream: viewSearchAsStream,\n      view: viewDocs,\n      viewAsStream: viewDocsAsStream,\n      find: find,\n      findAsStream: findAsStream,\n      createIndex: createIndex,\n      viewWithList: viewWithList,\n      viewWithListAsStream: viewWithListAsStream,\n      server: serverScope,\n      replication: {\n        enable: function (target, opts, cb) {\n          return enableReplication(dbName, target, opts, cb)\n        },\n        disable: function (id, revision, opts, cb) {\n          return disableReplication(id, revision, opts, cb)\n        },\n        query: function (id, opts, cb) {\n          return queryReplication(id, opts, cb)\n        }\n      },\n      partitionInfo: partitionInfo,\n      partitionedList: partitionedList,\n      partitionedListAsStream: partitionedListAsStream,\n      partitionedFind: partitionedFind,\n      partitionedFindAsStream: partitionedFindAsStream,\n      partitionedSearch: partitionedSearch,\n      partitionedSearchAsStream: partitionedSearchAsStream,\n      partitionedView: partitionedView,\n      partitionedViewAsStream: partitionedViewAsStream\n    }\n\n    docScope.view.compact = function (ddoc, cb) {\n      return compactDb(dbName, ddoc, cb)\n    }\n\n    return docScope\n  }\n\n  // server level exports\n  serverScope = Object.assign(serverScope, {\n    db: {\n      create: createDb,\n      get: getDb,\n      destroy: destroyDb,\n      list: listDbs,\n      listAsStream: listDbsAsStream,\n      use: docModule,\n      scope: docModule,\n      compact: compactDb,\n      replicate: replicateDb,\n      replication: {\n        enable: enableReplication,\n        disable: disableReplication,\n        query: queryReplication\n      },\n      changes: changesDb,\n      updates: updates\n    },\n    use: docModule,\n    scope: docModule,\n    request: relax,\n    relax: relax,\n    dinosaur: relax,\n    auth: auth,\n    session: session,\n    updates: updates,\n    uuids: uuids,\n    info: info\n  })\n\n  const db = maybeExtractDatabaseComponent()\n\n  return db ? docModule(db) : serverScope\n}\n\n/*\n * and now an ascii dinosaur\n *              _\n *            / _) ROAR! i'm a vegan!\n *     .-^^^-/ /\n *  __/       /\n * /__.|_|-|_|\n *\n * thanks for visiting! come again!\n */\n\nfunction urlResolveFix (couchUrl, dbName) {\n  if (/[^/]$/.test(couchUrl)) {\n    couchUrl += '/'\n  }\n  return new URL(dbName, couchUrl).toString()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}