{"ast":null,"code":"/*\n * env.js: Simple memory-based store for environment variables\n *\n * (C) 2011, Charlie Robbins and the Contributors.\n *\n */\n\nvar util = require('util'),\n  common = require('../common'),\n  Memory = require('./memory').Memory;\n\n//\n// ### function Env (options)\n// #### @options {Object} Options for this instance.\n// Constructor function for the Env nconf store, a simple abstraction\n// around the Memory store that can read process environment variables.\n//\nvar Env = exports.Env = function (options) {\n  Memory.call(this, options);\n  options = options || {};\n  this.type = 'env';\n  this.readOnly = true;\n  this.whitelist = options.whitelist || [];\n  this.separator = options.separator || '';\n  this.lowerCase = options.lowerCase || false;\n  this.parseValues = options.parseValues || false;\n  this.transform = options.transform || false;\n  if ({}.toString.call(options.match) === '[object RegExp]' && typeof options !== 'string') {\n    this.match = options.match;\n  }\n  if (options instanceof Array) {\n    this.whitelist = options;\n  }\n  if (typeof options === 'string' || options instanceof RegExp) {\n    this.separator = options;\n  }\n};\n\n// Inherit from the Memory store\nutil.inherits(Env, Memory);\n\n//\n// ### function loadSync ()\n// Loads the data passed in from `process.env` into this instance.\n//\nEnv.prototype.loadSync = function () {\n  this.loadEnv();\n  return this.store;\n};\n\n//\n// ### function loadEnv ()\n// Loads the data passed in from `process.env` into this instance.\n//\nEnv.prototype.loadEnv = function () {\n  var self = this;\n  var env = process.env;\n  if (this.lowerCase) {\n    env = {};\n    Object.keys(process.env).forEach(function (key) {\n      env[key.toLowerCase()] = process.env[key];\n    });\n  }\n  if (this.transform) {\n    env = common.transform(env, this.transform);\n  }\n  this.readOnly = false;\n  Object.keys(env).filter(function (key) {\n    if (self.match && self.whitelist.length) {\n      return key.match(self.match) || self.whitelist.indexOf(key) !== -1;\n    } else if (self.match) {\n      return key.match(self.match);\n    } else {\n      return !self.whitelist.length || self.whitelist.indexOf(key) !== -1;\n    }\n  }).forEach(function (key) {\n    var val = env[key];\n    if (self.parseValues) {\n      val = common.parseValues(val);\n    }\n    if (self.separator) {\n      self.set(common.key.apply(common, key.split(self.separator)), val);\n    } else {\n      self.set(key, val);\n    }\n  });\n  this.readOnly = true;\n  return this.store;\n};","map":{"version":3,"names":["util","require","common","Memory","Env","exports","options","call","type","readOnly","whitelist","separator","lowerCase","parseValues","transform","toString","match","Array","RegExp","inherits","prototype","loadSync","loadEnv","store","self","env","process","Object","keys","forEach","key","toLowerCase","filter","length","indexOf","val","set","apply","split"],"sources":["/home/deepakraj/Desktop/Ticket-ADDA/ticketadda/client/node_modules/nconf/lib/nconf/stores/env.js"],"sourcesContent":["/*\n * env.js: Simple memory-based store for environment variables\n *\n * (C) 2011, Charlie Robbins and the Contributors.\n *\n */\n\nvar util = require('util'),\n    common = require('../common'),\n    Memory = require('./memory').Memory;\n\n//\n// ### function Env (options)\n// #### @options {Object} Options for this instance.\n// Constructor function for the Env nconf store, a simple abstraction\n// around the Memory store that can read process environment variables.\n//\nvar Env = exports.Env = function (options) {\n  Memory.call(this, options);\n\n  options        = options || {};\n  this.type      = 'env';\n  this.readOnly  = true;\n  this.whitelist = options.whitelist || [];\n  this.separator = options.separator || '';\n  this.lowerCase = options.lowerCase || false;\n  this.parseValues = options.parseValues || false;\n  this.transform = options.transform || false;\n\n  if (({}).toString.call(options.match) === '[object RegExp]'\n      && typeof options !== 'string') {\n    this.match = options.match;\n  }\n\n  if (options instanceof Array) {\n    this.whitelist = options;\n  }\n  if (typeof(options) === 'string' || options instanceof RegExp) {\n    this.separator = options;\n  }\n};\n\n// Inherit from the Memory store\nutil.inherits(Env, Memory);\n\n//\n// ### function loadSync ()\n// Loads the data passed in from `process.env` into this instance.\n//\nEnv.prototype.loadSync = function () {\n  this.loadEnv();\n  return this.store;\n};\n\n//\n// ### function loadEnv ()\n// Loads the data passed in from `process.env` into this instance.\n//\nEnv.prototype.loadEnv = function () {\n  var self = this;\n\n  var env = process.env;\n\n  if (this.lowerCase) {\n    env = {};\n    Object.keys(process.env).forEach(function (key) {\n      env[key.toLowerCase()] = process.env[key];\n    });\n  }\n\n  if (this.transform) {\n    env = common.transform(env, this.transform);\n  }\n\n  this.readOnly = false;\n  Object.keys(env).filter(function (key) {\n    if (self.match && self.whitelist.length) {\n      return key.match(self.match) || self.whitelist.indexOf(key) !== -1\n    }\n    else if (self.match) {\n      return key.match(self.match);\n    }\n    else {\n      return !self.whitelist.length || self.whitelist.indexOf(key) !== -1\n    }\n  }).forEach(function (key) {\n    \n    var val = env[key];\n\n    if (self.parseValues) {\n      val = common.parseValues(val);\n    }\n\n    if (self.separator) {\n      self.set(common.key.apply(common, key.split(self.separator)), val);\n    }\n    else {\n      self.set(key, val);\n    }\n  });\n\n  this.readOnly = true;\n  return this.store;\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}