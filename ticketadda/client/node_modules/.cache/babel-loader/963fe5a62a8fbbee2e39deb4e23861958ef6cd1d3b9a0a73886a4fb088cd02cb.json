{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.blockFromContractListener = exports.checkpointBlockListener = void 0;\nconst GatewayUtils = __importStar(require(\"../gatewayutils\"));\nconst Logger = __importStar(require(\"../../logger\"));\nconst logger = Logger.getLogger('Listener');\nfunction checkpointBlockListener(listener, checkpointer) {\n  return async blockEvent => {\n    const checkpointBlockNumber = await checkpointer.getBlockNumber();\n    if (!checkpointBlockNumber || checkpointBlockNumber.equals(blockEvent.blockNumber)) {\n      await listener(blockEvent);\n      const nextBlockNumber = blockEvent.blockNumber.add(1);\n      await checkpointer.setBlockNumber(nextBlockNumber);\n    }\n  };\n}\nexports.checkpointBlockListener = checkpointBlockListener;\nfunction blockFromContractListener(listener, checkpointer) {\n  if (checkpointer) {\n    const transactionListener = transactionFromContractListener(listener);\n    const checkpointTxListener = checkpointTransactionListener(transactionListener, checkpointer);\n    const blockListener = blockFromTransactionListener(checkpointTxListener);\n    return checkpointBlockListener(blockListener, checkpointer);\n  } else {\n    const transactionListener = transactionFromContractListener(listener);\n    return blockFromTransactionListener(transactionListener);\n  }\n}\nexports.blockFromContractListener = blockFromContractListener;\nfunction transactionFromContractListener(listener) {\n  return async transactionEvent => {\n    for (const contractEvent of transactionEvent.getContractEvents()) {\n      await listener(contractEvent);\n    }\n  };\n}\nfunction checkpointTransactionListener(listener, checkpointer) {\n  return async transactionEvent => {\n    const checkpointTransactionIds = await checkpointer.getTransactionIds();\n    if (!checkpointTransactionIds.has(transactionEvent.transactionId)) {\n      await listener(transactionEvent);\n      await checkpointer.addTransactionId(transactionEvent.transactionId);\n    }\n  };\n}\nfunction blockFromTransactionListener(listener) {\n  return async blockEvent => {\n    const transactionPromises = blockEvent.getTransactionEvents().filter(transactionEvent => transactionEvent.isValid).map(transactionEvent => listener(transactionEvent));\n    // Don't use Promise.all() as it returns early if any promises are rejected\n    const results = await GatewayUtils.allSettled(transactionPromises);\n    logAndThrowErrors(results);\n  };\n}\nfunction logAndThrowErrors(results) {\n  const errors = results.filter(result => result.status === 'rejected').map(result => result.reason);\n  if (errors.length > 0) {\n    errors.forEach(error => logger.warn('Error notifying transaction listener', error));\n    throw new Error(`Error notifying listener: ${errors[0].stack || errors[0].message}`);\n  }\n}","map":{"version":3,"names":["GatewayUtils","__importStar","require","Logger","logger","getLogger","checkpointBlockListener","listener","checkpointer","blockEvent","checkpointBlockNumber","getBlockNumber","equals","blockNumber","nextBlockNumber","add","setBlockNumber","exports","blockFromContractListener","transactionListener","transactionFromContractListener","checkpointTxListener","checkpointTransactionListener","blockListener","blockFromTransactionListener","transactionEvent","contractEvent","getContractEvents","checkpointTransactionIds","getTransactionIds","has","transactionId","addTransactionId","transactionPromises","getTransactionEvents","filter","isValid","map","results","allSettled","logAndThrowErrors","errors","result","status","reason","length","forEach","error","warn","Error","stack","message"],"sources":["../../../src/impl/event/listeners.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}