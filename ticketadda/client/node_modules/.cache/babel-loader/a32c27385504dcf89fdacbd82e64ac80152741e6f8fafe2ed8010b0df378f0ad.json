{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newDefaultProviderRegistry = exports.IdentityProviderRegistry = void 0;\nconst x509identity_1 = require(\"./x509identity\");\nconst defaultProviders = [new x509identity_1.X509Provider()];\n/**\n * Registry of identity providers for use by a wallet.\n * @memberof module:fabric-network\n */\nclass IdentityProviderRegistry {\n  constructor() {\n    this.providers = new Map();\n  }\n  /**\n   * Get the provider for a given type from the registry. Throws an error if no provider for the type exists.\n   * @param {string} type Identity type identifier.\n   * @returns {module:fabric-network.IdentityProvider} An identity provider.\n   */\n  getProvider(type) {\n    const provider = this.providers.get(type);\n    if (!provider) {\n      throw new Error('Unknown identity type: ' + type);\n    }\n    return provider;\n  }\n  /**\n   * Add a provider to the registry.\n   * @param {module:fabric-network.IdentityProvider} provider Identity provider.\n   */\n  addProvider(provider) {\n    this.providers.set(provider.type, provider);\n  }\n}\nexports.IdentityProviderRegistry = IdentityProviderRegistry;\nfunction newDefaultProviderRegistry() {\n  const registry = new IdentityProviderRegistry();\n  defaultProviders.forEach(provider => registry.addProvider(provider));\n  return registry;\n}\nexports.newDefaultProviderRegistry = newDefaultProviderRegistry;","map":{"version":3,"names":["x509identity_1","require","defaultProviders","X509Provider","IdentityProviderRegistry","constructor","providers","Map","getProvider","type","provider","get","Error","addProvider","set","exports","newDefaultProviderRegistry","registry","forEach"],"sources":["../../../src/impl/wallet/identityproviderregistry.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;AAOA,MAAAA,cAAA,GAAAC,OAAA;AAEA,MAAMC,gBAAgB,GAAuB,CAC5C,IAAIF,cAAA,CAAAG,YAAY,EAAE,CAClB;AAED;;;;AAIA,MAAaC,wBAAwB;EAArCC,YAAA;IACkB,KAAAC,SAAS,GAAkC,IAAIC,GAAG,EAAE;EAsBtE;EApBC;;;;;EAKOC,WAAWA,CAACC,IAAY;IAC9B,MAAMC,QAAQ,GAAiC,IAAI,CAACJ,SAAS,CAACK,GAAG,CAACF,IAAI,CAAC;IACvE,IAAI,CAACC,QAAQ,EAAE;MACd,MAAM,IAAIE,KAAK,CAAC,yBAAyB,GAAGH,IAAI,CAAC;;IAElD,OAAOC,QAAQ;EAChB;EAEA;;;;EAIOG,WAAWA,CAACH,QAA0B;IAC5C,IAAI,CAACJ,SAAS,CAACQ,GAAG,CAACJ,QAAQ,CAACD,IAAI,EAAEC,QAAQ,CAAC;EAC5C;;AAtBDK,OAAA,CAAAX,wBAAA,GAAAA,wBAAA;AAyBA,SAAgBY,0BAA0BA,CAAA;EACzC,MAAMC,QAAQ,GAAG,IAAIb,wBAAwB,EAAE;EAC/CF,gBAAgB,CAACgB,OAAO,CAAER,QAAQ,IAAKO,QAAQ,CAACJ,WAAW,CAACH,QAAQ,CAAC,CAAC;EACtE,OAAOO,QAAQ;AAChB;AAJAF,OAAA,CAAAC,0BAAA,GAAAA,0BAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}