{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2020 IBM All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newFilteredBlockEvent = void 0;\nconst gatewayutils_1 = require(\"../gatewayutils\");\nconst TransactionStatus = __importStar(require(\"./transactionstatus\"));\nconst util = __importStar(require(\"util\"));\nfunction newFilteredBlockEvent(eventInfo) {\n  if (!eventInfo.filteredBlock) {\n    throw new Error('No block data found: ' + util.inspect(eventInfo));\n  }\n  const blockEvent = {\n    blockNumber: eventInfo.blockNumber,\n    blockData: eventInfo.filteredBlock,\n    getTransactionEvents: (0, gatewayutils_1.cachedResult)(() => newFilteredTransactionEvents(blockEvent))\n  };\n  return Object.freeze(blockEvent);\n}\nexports.newFilteredBlockEvent = newFilteredBlockEvent;\nfunction newFilteredTransactionEvents(blockEvent) {\n  const filteredTransactions = blockEvent.blockData.filtered_transactions || [];\n  return filteredTransactions.map(tx => newFilteredTransactionEvent(blockEvent, tx));\n}\nfunction newFilteredTransactionEvent(blockEvent, filteredTransaction) {\n  const status = TransactionStatus.getStatusForCode(filteredTransaction.tx_validation_code);\n  const transactionEvent = {\n    transactionId: filteredTransaction.txid,\n    status: status,\n    transactionData: filteredTransaction,\n    isValid: status === TransactionStatus.VALID_STATUS,\n    getBlockEvent: () => blockEvent,\n    getContractEvents: (0, gatewayutils_1.cachedResult)(() => newFilteredContractEvents(transactionEvent))\n  };\n  return Object.freeze(transactionEvent);\n}\nfunction newFilteredContractEvents(transactionEvent) {\n  var _a;\n  const chaincodeActions = ((_a = transactionEvent.transactionData.transaction_actions) === null || _a === void 0 ? void 0 : _a.chaincode_actions) || [];\n  return chaincodeActions.map(ccAction => newFilteredContractEvent(transactionEvent, ccAction.chaincode_event));\n}\nfunction newFilteredContractEvent(transactionEvent, chaincodeEvent) {\n  const contractEvent = {\n    chaincodeId: chaincodeEvent.chaincode_id,\n    eventName: chaincodeEvent.event_name,\n    getTransactionEvent: () => transactionEvent\n  };\n  return Object.freeze(contractEvent);\n}","map":{"version":3,"names":["gatewayutils_1","require","TransactionStatus","__importStar","util","newFilteredBlockEvent","eventInfo","filteredBlock","Error","inspect","blockEvent","blockNumber","blockData","getTransactionEvents","cachedResult","newFilteredTransactionEvents","Object","freeze","exports","filteredTransactions","filtered_transactions","map","tx","newFilteredTransactionEvent","filteredTransaction","status","getStatusForCode","tx_validation_code","transactionEvent","transactionId","txid","transactionData","isValid","VALID_STATUS","getBlockEvent","getContractEvents","newFilteredContractEvents","chaincodeActions","_a","transaction_actions","chaincode_actions","ccAction","newFilteredContractEvent","chaincode_event","chaincodeEvent","contractEvent","chaincodeId","chaincode_id","eventName","event_name","getTransactionEvent"],"sources":["../../../src/impl/event/filteredblockeventfactory.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,MAAAA,cAAA,GAAAC,OAAA;AACA,MAAAC,iBAAA,GAAAC,YAAA,CAAAF,OAAA;AACA,MAAAG,IAAA,GAAAD,YAAA,CAAAF,OAAA;AAEA,SAAgBI,qBAAqBA,CAACC,SAAoB;EACzD,IAAI,CAACA,SAAS,CAACC,aAAa,EAAE;IAC7B,MAAM,IAAIC,KAAK,CAAC,uBAAuB,GAAGJ,IAAI,CAACK,OAAO,CAACH,SAAS,CAAC,CAAC;;EAGnE,MAAMI,UAAU,GAAe;IAC9BC,WAAW,EAAEL,SAAS,CAACK,WAAW;IAClCC,SAAS,EAAEN,SAAS,CAACC,aAAa;IAClCM,oBAAoB,EAAE,IAAAb,cAAA,CAAAc,YAAY,EAAC,MAAMC,4BAA4B,CAACL,UAAU,CAAC;GACjF;EAED,OAAOM,MAAM,CAACC,MAAM,CAACP,UAAU,CAAC;AACjC;AAZAQ,OAAA,CAAAb,qBAAA,GAAAA,qBAAA;AAcA,SAASU,4BAA4BA,CAACL,UAAsB;EAC3D,MAAMS,oBAAoB,GAAIT,UAAU,CAACE,SAA6C,CAACQ,qBAAqB,IAAI,EAAE;EAClH,OAAOD,oBAAoB,CAACE,GAAG,CAAEC,EAAE,IAAKC,2BAA2B,CAACb,UAAU,EAAEY,EAAE,CAAC,CAAC;AACrF;AAEA,SAASC,2BAA2BA,CAACb,UAAsB,EAAEc,mBAA0D;EACtH,MAAMC,MAAM,GAAGvB,iBAAiB,CAACwB,gBAAgB,CAACF,mBAAmB,CAACG,kBAA4B,CAAC;EACnG,MAAMC,gBAAgB,GAAqB;IAC1CC,aAAa,EAAEL,mBAAmB,CAACM,IAAc;IACjDL,MAAM,EAAEA,MAAM;IACdM,eAAe,EAAEP,mBAAmB;IACpCQ,OAAO,EAAEP,MAAM,KAAKvB,iBAAiB,CAAC+B,YAAY;IAClDC,aAAa,EAAEA,CAAA,KAAMxB,UAAU;IAC/ByB,iBAAiB,EAAE,IAAAnC,cAAA,CAAAc,YAAY,EAAC,MAAMsB,yBAAyB,CAACR,gBAAgB,CAAC;GACjF;EAED,OAAOZ,MAAM,CAACC,MAAM,CAACW,gBAAgB,CAAC;AACvC;AAEA,SAASQ,yBAAyBA,CAACR,gBAAkC;;EACpE,MAAMS,gBAAgB,GACrB,EAAAC,EAAA,GAACV,gBAAgB,CAACG,eAAyD,CAACQ,mBAAmB,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,iBAAiB,KAAI,EAAE;EACzH,OAAOH,gBAAgB,CAAChB,GAAG,CAAEoB,QAAQ,IAAKC,wBAAwB,CAACd,gBAAgB,EAClFa,QAAQ,CAACE,eAAmD,CAAC,CAAC;AAChE;AAEA,SAASD,wBAAwBA,CAACd,gBAAkC,EAAEgB,cAAgD;EACrH,MAAMC,aAAa,GAAkB;IACpCC,WAAW,EAAEF,cAAc,CAACG,YAAsB;IAClDC,SAAS,EAAEJ,cAAc,CAACK,UAAoB;IAC9CC,mBAAmB,EAAEA,CAAA,KAAMtB;GAC3B;EAED,OAAOZ,MAAM,CAACC,MAAM,CAAC4B,aAAa,CAAC;AACpC"},"metadata":{},"sourceType":"script","externalDependencies":[]}